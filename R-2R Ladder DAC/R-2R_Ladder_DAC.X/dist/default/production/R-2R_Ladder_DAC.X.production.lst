

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jul 04 20:44:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     001E                     _ADRESH	set	30
   167     001F                     _ADCON0	set	31
   168     0006                     _PORTB	set	6
   169     00FA                     _GO_DONE	set	250
   170     009E                     _ADRESL	set	158
   171     009F                     _ADCON1	set	159
   172     0086                     _TRISB	set	134
   173                           
   174                           	psect	cinit
   175     07FC                     start_initialization:	
   176                           ; #config settings
   177                           
   178     07FC                     __initialization:
   179     07FC                     end_of_initialization:	
   180                           ;End of C runtime variable initialization code
   181                           
   182     07FC                     __end_of__initialization:
   183     07FC  0183               	clrf	3
   184     07FD  120A  118A  2FCE   	ljmp	_main	;jump to C main() function
   185                           
   186                           	psect	cstackCOMMON
   187     0070                     __pcstackCOMMON:
   188     0070                     ?_ADC_Init:
   189     0070                     ??_ADC_Init:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0070                     ?_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     ?_ADC_Read:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 2 bytes @ 0x0
   200     0070                     	ds	2
   201     0072                     ??_ADC_Read:
   202                           
   203                           ; 1 bytes @ 0x2
   204     0072                     	ds	1
   205     0073                     ADC_Read@PIN:
   206                           
   207                           ; 1 bytes @ 0x3
   208     0073                     	ds	1
   209     0074                     ??_main:
   210                           
   211                           ; 1 bytes @ 0x4
   212     0074                     	ds	2
   213     0076                     main@ADC_BUFF:
   214                           
   215                           ; 2 bytes @ 0x6
   216     0076                     	ds	2
   217                           
   218                           	psect	maintext
   219     07CE                     __pmaintext:	
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 16 in file "R-2R_Ladder_DAC.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  ADC_BUFF        2    6[COMMON] unsigned int 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         2       0       0       0       0
   241 ;;      Temps:          2       0       0       0       0
   242 ;;      Totals:         4       0       0       0       0
   243 ;;Total ram usage:        4 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_ADC_Init
   247 ;;		_ADC_Read
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     07CE                     _main:	
   254                           ;psect for function _main
   255                           
   256     07CE                     l663:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   259                           
   260                           
   261                           ;R-2R_Ladder_DAC.c: 17:     ADC_Init();
   262     07CE  120A  118A  279E  120A  118A  	fcall	_ADC_Init
   263     07D3                     l665:
   264                           
   265                           ;R-2R_Ladder_DAC.c: 18:     TRISB=0;
   266     07D3  1683               	bsf	3,5	;RP0=1, select bank1
   267     07D4  1303               	bcf	3,6	;RP1=0, select bank1
   268     07D5  0186               	clrf	6	;volatile
   269     07D6                     l667:
   270                           
   271                           ;R-2R_Ladder_DAC.c: 19:     PORTB=0;
   272     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   273     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   274     07D8  0186               	clrf	6	;volatile
   275     07D9                     l669:
   276                           
   277                           ;R-2R_Ladder_DAC.c: 22:         ADC_BUFF=ADC_Read(0)>>2;
   278     07D9  3000               	movlw	0
   279     07DA  120A  118A  27A7  120A  118A  	fcall	_ADC_Read
   280     07DF  0870               	movf	?_ADC_Read,w
   281     07E0  00F4               	movwf	??_main
   282     07E1  0871               	movf	?_ADC_Read+1,w
   283     07E2  00F5               	movwf	??_main+1
   284     07E3  1003               	clrc
   285     07E4  0CF5               	rrf	??_main+1,f
   286     07E5  0CF4               	rrf	??_main,f
   287     07E6  1003               	clrc
   288     07E7  0CF5               	rrf	??_main+1,f
   289     07E8  0CF4               	rrf	??_main,f
   290     07E9  0874               	movf	??_main,w
   291     07EA  00F6               	movwf	main@ADC_BUFF
   292     07EB  0875               	movf	??_main+1,w
   293     07EC  00F7               	movwf	main@ADC_BUFF+1
   294     07ED                     l671:
   295                           
   296                           ;R-2R_Ladder_DAC.c: 23:         PORTB=ADC_BUFF;
   297     07ED  0876               	movf	main@ADC_BUFF,w
   298     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   299     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   300     07F0  0086               	movwf	6	;volatile
   301     07F1                     l673:
   302                           
   303                           ;R-2R_Ladder_DAC.c: 24:         _delay((unsigned long)((1)*(4000000/4000.0)));
   304     07F1  30C7               	movlw	199
   305     07F2  00F4               	movwf	??_main
   306     07F3                     u57:
   307     07F3  2FF4               	nop2
   308     07F4  0BF4               	decfsz	??_main,f
   309     07F5  2FF3               	goto	u57
   310     07F6  2FF7               	nop2
   311     07F7  2FF8               	nop2
   312     07F8  2FD9               	goto	l669
   313     07F9  120A  118A  2800   	ljmp	start
   314     07FC                     __end_of_main:
   315                           
   316                           	psect	text1
   317     07A7                     __ptext1:	
   318 ;; *************** function _ADC_Read *****************
   319 ;; Defined at:
   320 ;;		line 32 in file "R-2R_Ladder_DAC.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  PIN             1    wreg     unsigned char 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  PIN             1    3[COMMON] unsigned char 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  2    0[COMMON] unsigned int 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, btemp+1
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         2       0       0       0       0
   335 ;;      Locals:         1       0       0       0       0
   336 ;;      Temps:          1       0       0       0       0
   337 ;;      Totals:         4       0       0       0       0
   338 ;;Total ram usage:        4 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347     07A7                     _ADC_Read:	
   348                           ;psect for function _ADC_Read
   349                           
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   353                           ;ADC_Read@PIN stored from wreg
   354     07A7  00F3               	movwf	ADC_Read@PIN
   355     07A8                     l653:
   356                           
   357                           ;R-2R_Ladder_DAC.c: 33:     ADCON0 &=0b11000101;
   358     07A8  30C5               	movlw	197
   359     07A9  00FF               	movwf	btemp+1
   360     07AA  087F               	movf	btemp+1,w
   361     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   362     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   363     07AD  059F               	andwf	31,f	;volatile
   364                           
   365                           ;R-2R_Ladder_DAC.c: 34:     ADCON0 |=(PIN<<3);
   366     07AE  0873               	movf	ADC_Read@PIN,w	;volatile
   367     07AF  00F2               	movwf	??_ADC_Read
   368     07B0  3002               	movlw	2
   369     07B1                     u35:
   370     07B1  1003               	clrc
   371     07B2  0DF2               	rlf	??_ADC_Read,f
   372     07B3  3EFF               	addlw	-1
   373     07B4  1D03               	skipz
   374     07B5  2FB1               	goto	u35
   375     07B6  1003               	clrc
   376     07B7  0D72               	rlf	??_ADC_Read,w
   377     07B8  00FF               	movwf	btemp+1
   378     07B9  087F               	movf	btemp+1,w
   379     07BA  049F               	iorwf	31,f	;volatile
   380     07BB                     l655:
   381                           
   382                           ;R-2R_Ladder_DAC.c: 35:     _delay((unsigned long)((30)*(4000000/4000000.0)));
   383     07BB  3009               	movlw	9
   384     07BC  00F2               	movwf	??_ADC_Read
   385     07BD                     u67:
   386     07BD  0BF2               	decfsz	??_ADC_Read,f
   387     07BE  2FBD               	goto	u67
   388     07BF  2FC0               	nop2
   389     07C0                     l657:
   390                           
   391                           ;R-2R_Ladder_DAC.c: 36:     GO_DONE=1;
   392     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   393     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   394     07C2  151F               	bsf	31,2	;volatile
   395     07C3                     l34:	
   396                           ;R-2R_Ladder_DAC.c: 37:     while(GO_DONE);
   397                           
   398     07C3  191F               	btfsc	31,2	;volatile
   399     07C4  2FC6               	goto	u41
   400     07C5  2FC7               	goto	u40
   401     07C6                     u41:
   402     07C6  2FC3               	goto	l34
   403     07C7                     u40:
   404     07C7                     l659:
   405                           
   406                           ;R-2R_Ladder_DAC.c: 38:     return ((ADRESH<<8) + ADRESL);
   407     07C7  081E               	movf	30,w	;volatile
   408     07C8  00F1               	movwf	?_ADC_Read+1
   409     07C9  1683               	bsf	3,5	;RP0=1, select bank1
   410     07CA  1303               	bcf	3,6	;RP1=0, select bank1
   411     07CB  081E               	movf	30,w	;volatile
   412     07CC  00F0               	movwf	?_ADC_Read
   413     07CD                     l37:
   414     07CD  0008               	return
   415     07CE                     __end_of_ADC_Read:
   416                           
   417                           	psect	text2
   418     079E                     __ptext2:	
   419 ;; *************** function _ADC_Init *****************
   420 ;; Defined at:
   421 ;;		line 28 in file "R-2R_Ladder_DAC.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     079E                     _ADC_Init:	
   449                           ;psect for function _ADC_Init
   450                           
   451     079E                     l629:	
   452                           ;incstack = 0
   453                           ; Regs used in _ADC_Init: [wreg]
   454                           
   455                           
   456                           ;R-2R_Ladder_DAC.c: 29:     ADCON0=0b01000001;
   457     079E  3041               	movlw	65
   458     079F  1283               	bcf	3,5	;RP0=0, select bank0
   459     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   460     07A1  009F               	movwf	31	;volatile
   461                           
   462                           ;R-2R_Ladder_DAC.c: 30:     ADCON1=0b10000000;
   463     07A2  3080               	movlw	128
   464     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   465     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   466     07A5  009F               	movwf	31	;volatile
   467     07A6                     l31:
   468     07A6  0008               	return
   469     07A7                     __end_of_ADC_Init:
   470     007E                     btemp	set	126	;btemp
   471     007E                     wtemp0	set	126
   472                           
   473                           	psect	config
   474                           
   475                           ;Config register CONFIG @ 0x2007
   476                           ;	Oscillator Selection bits
   477                           ;	FOSC = XT, XT oscillator
   478                           ;	Watchdog Timer Enable bit
   479                           ;	WDTE = OFF, WDT disabled
   480                           ;	Power-up Timer Enable bit
   481                           ;	PWRTE = ON, PWRT enabled
   482                           ;	Brown-out Reset Enable bit
   483                           ;	BOREN = ON, BOR enabled
   484                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   485                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   486                           ;	Data EEPROM Memory Code Protection bit
   487                           ;	CPD = OFF, Data EEPROM code protection off
   488                           ;	Flash Program Memory Write Enable bits
   489                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   490                           ;	In-Circuit Debugger Mode bit
   491                           ;	DEBUG = 0x1, unprogrammed default
   492                           ;	Flash Program Memory Code Protection bit
   493                           ;	CP = OFF, Code protection off
   494     2007                     	org	8199
   495     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              4 COMMON     4     4      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jul 04 20:44:51 2023

                     l31 07A6                       l34 07C3                       l37 07CD  
                     u40 07C7                       u41 07C6                       u35 07B1  
                     u57 07F3                       u67 07BD                      l629 079E  
                    l653 07A8                      l655 07BB                      l671 07ED  
                    l663 07CE                      l657 07C0                      l673 07F1  
                    l665 07D3                      l659 07C7                      l667 07D6  
                    l669 07D9                     _main 07CE                     btemp 007E  
       __end_of_ADC_Init 07A7         __end_of_ADC_Read 07CE                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
              ?_ADC_Init 0070                ?_ADC_Read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_ADC_Init 0070               ??_ADC_Read 0072  
             __pmaintext 07CE                  _GO_DONE 00FA                  __ptext1 07A7  
                __ptext2 079E     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                 _ADC_Init 079E                 _ADC_Read 07A7  
            ADC_Read@PIN 0073             main@ADC_BUFF 0076  
