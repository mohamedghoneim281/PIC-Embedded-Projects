

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 26 21:54:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     000B                     _INTCONbits	set	11
   167     0008                     _PORTD	set	8
   168     0030                     _RB0	set	48
   169     0033                     _RB3	set	51
   170     0032                     _RB2	set	50
   171     0031                     _RB1	set	49
   172     0088                     _TRISD	set	136
   173     0086                     _TRISB	set	134
   174     010C                     _EEDATA	set	268
   175     010D                     _EEADR	set	269
   176     018D                     _EECON2	set	397
   177     018C                     _EECON1bits	set	396
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2F64   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_EEPROM_Write:
   194     0070                     ?_EEPROM_Read:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_EEPROM_Read:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     EEPROM_Write@Data:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     EEPROM_Read@Address:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211     0070                     	ds	1
   212     0071                     ??_EEPROM_Write:
   213     0071                     EEPROM_Write@Address:	
   214                           ; 1 bytes @ 0x1
   215                           
   216     0071                     EEPROM_Read@Data:	
   217                           ; 1 bytes @ 0x1
   218                           
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	1
   222     0072                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x2
   225     0072                     	ds	3
   226     0075                     main@i:
   227                           
   228                           ; 1 bytes @ 0x5
   229     0075                     	ds	1
   230     0076                     main@Address:
   231                           
   232                           ; 1 bytes @ 0x6
   233     0076                     	ds	1
   234                           
   235                           	psect	maintext
   236     0764                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 18 in file "EEPROM_Read_Write.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  i               1    5[COMMON] unsigned char 
   247 ;;  Address         1    6[COMMON] unsigned char 
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   257 ;;      Params:         0       0       0       0       0
   258 ;;      Locals:         2       0       0       0       0
   259 ;;      Temps:          3       0       0       0       0
   260 ;;      Totals:         5       0       0       0       0
   261 ;;Total ram usage:        5 bytes
   262 ;; Hardware stack levels required when called: 1
   263 ;; This function calls:
   264 ;;		_EEPROM_Read
   265 ;;		_EEPROM_Write
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271     0764                     _main:	
   272                           ;psect for function _main
   273                           
   274     0764                     l742:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   277                           
   278                           
   279                           ;EEPROM_Read_Write.c: 19:     TRISB=0x0F;
   280     0764  300F               	movlw	15
   281     0765  1683               	bsf	3,5	;RP0=1, select bank1
   282     0766  1303               	bcf	3,6	;RP1=0, select bank1
   283     0767  0086               	movwf	6	;volatile
   284     0768                     l744:
   285                           
   286                           ;EEPROM_Read_Write.c: 20:     TRISD=0;
   287     0768  0188               	clrf	8	;volatile
   288     0769                     l746:
   289                           
   290                           ;EEPROM_Read_Write.c: 21:     PORTD=0;
   291     0769  1283               	bcf	3,5	;RP0=0, select bank0
   292     076A  1303               	bcf	3,6	;RP1=0, select bank0
   293     076B  0188               	clrf	8	;volatile
   294     076C                     l748:
   295                           
   296                           ;EEPROM_Read_Write.c: 22:     uint8_t Address=0;
   297     076C  01F6               	clrf	main@Address
   298     076D                     l750:
   299                           
   300                           ;EEPROM_Read_Write.c: 24:         if(RB1)
   301     076D  1283               	bcf	3,5	;RP0=0, select bank0
   302     076E  1303               	bcf	3,6	;RP1=0, select bank0
   303     076F  1C86               	btfss	6,1	;volatile
   304     0770  2F72               	goto	u91
   305     0771  2F73               	goto	u90
   306     0772                     u91:
   307     0772  2F8C               	goto	l758
   308     0773                     u90:
   309     0773                     l752:
   310                           
   311                           ;EEPROM_Read_Write.c: 25:     {;EEPROM_Read_Write.c: 26:       EEPROM_Write(Address++, 3
      +                          );
   312     0773  3003               	movlw	3
   313     0774  00F0               	movwf	EEPROM_Write@Data
   314     0775  0876               	movf	main@Address,w
   315     0776  120A  118A  2749  120A  118A  	fcall	_EEPROM_Write
   316     077B                     l754:
   317     077B  3001               	movlw	1
   318     077C  00FF               	movwf	btemp+1
   319     077D  087F               	movf	btemp+1,w
   320     077E  07F6               	addwf	main@Address,f
   321     077F                     l756:
   322                           
   323                           ;EEPROM_Read_Write.c: 27:       _delay((unsigned long)((500)*(4000000/4000.0)));
   324     077F  3003               	movlw	3
   325     0780  00F4               	movwf	??_main+2
   326     0781  308A               	movlw	138
   327     0782  00F3               	movwf	??_main+1
   328     0783  3055               	movlw	85
   329     0784  00F2               	movwf	??_main
   330     0785                     u157:
   331     0785  0BF2               	decfsz	??_main,f
   332     0786  2F85               	goto	u157
   333     0787  0BF3               	decfsz	??_main+1,f
   334     0788  2F85               	goto	u157
   335     0789  0BF4               	decfsz	??_main+2,f
   336     078A  2F85               	goto	u157
   337     078B  2F8C               	nop2
   338     078C                     l758:
   339                           
   340                           ;EEPROM_Read_Write.c: 29:     if(RB2)
   341     078C  1283               	bcf	3,5	;RP0=0, select bank0
   342     078D  1303               	bcf	3,6	;RP1=0, select bank0
   343     078E  1D06               	btfss	6,2	;volatile
   344     078F  2F91               	goto	u101
   345     0790  2F92               	goto	u100
   346     0791                     u101:
   347     0791  2FAB               	goto	l766
   348     0792                     u100:
   349     0792                     l760:
   350                           
   351                           ;EEPROM_Read_Write.c: 30:     {;EEPROM_Read_Write.c: 31:       EEPROM_Write(Address++, 5
      +                          );
   352     0792  3005               	movlw	5
   353     0793  00F0               	movwf	EEPROM_Write@Data
   354     0794  0876               	movf	main@Address,w
   355     0795  120A  118A  2749  120A  118A  	fcall	_EEPROM_Write
   356     079A                     l762:
   357     079A  3001               	movlw	1
   358     079B  00FF               	movwf	btemp+1
   359     079C  087F               	movf	btemp+1,w
   360     079D  07F6               	addwf	main@Address,f
   361     079E                     l764:
   362                           
   363                           ;EEPROM_Read_Write.c: 32:       _delay((unsigned long)((500)*(4000000/4000.0)));
   364     079E  3003               	movlw	3
   365     079F  00F4               	movwf	??_main+2
   366     07A0  308A               	movlw	138
   367     07A1  00F3               	movwf	??_main+1
   368     07A2  3055               	movlw	85
   369     07A3  00F2               	movwf	??_main
   370     07A4                     u167:
   371     07A4  0BF2               	decfsz	??_main,f
   372     07A5  2FA4               	goto	u167
   373     07A6  0BF3               	decfsz	??_main+1,f
   374     07A7  2FA4               	goto	u167
   375     07A8  0BF4               	decfsz	??_main+2,f
   376     07A9  2FA4               	goto	u167
   377     07AA  2FAB               	nop2
   378     07AB                     l766:
   379                           
   380                           ;EEPROM_Read_Write.c: 34:     if(RB3)
   381     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   382     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   383     07AD  1D86               	btfss	6,3	;volatile
   384     07AE  2FB0               	goto	u111
   385     07AF  2FB1               	goto	u110
   386     07B0                     u111:
   387     07B0  2FCA               	goto	l774
   388     07B1                     u110:
   389     07B1                     l768:
   390                           
   391                           ;EEPROM_Read_Write.c: 35:     {;EEPROM_Read_Write.c: 36:       EEPROM_Write(Address++, 7
      +                          );
   392     07B1  3007               	movlw	7
   393     07B2  00F0               	movwf	EEPROM_Write@Data
   394     07B3  0876               	movf	main@Address,w
   395     07B4  120A  118A  2749  120A  118A  	fcall	_EEPROM_Write
   396     07B9                     l770:
   397     07B9  3001               	movlw	1
   398     07BA  00FF               	movwf	btemp+1
   399     07BB  087F               	movf	btemp+1,w
   400     07BC  07F6               	addwf	main@Address,f
   401     07BD                     l772:
   402                           
   403                           ;EEPROM_Read_Write.c: 37:       _delay((unsigned long)((500)*(4000000/4000.0)));
   404     07BD  3003               	movlw	3
   405     07BE  00F4               	movwf	??_main+2
   406     07BF  308A               	movlw	138
   407     07C0  00F3               	movwf	??_main+1
   408     07C1  3055               	movlw	85
   409     07C2  00F2               	movwf	??_main
   410     07C3                     u177:
   411     07C3  0BF2               	decfsz	??_main,f
   412     07C4  2FC3               	goto	u177
   413     07C5  0BF3               	decfsz	??_main+1,f
   414     07C6  2FC3               	goto	u177
   415     07C7  0BF4               	decfsz	??_main+2,f
   416     07C8  2FC3               	goto	u177
   417     07C9  2FCA               	nop2
   418     07CA                     l774:
   419                           
   420                           ;EEPROM_Read_Write.c: 39:     if(Address == 3)
   421     07CA  3003               	movlw	3
   422     07CB  0676               	xorwf	main@Address,w
   423     07CC  1D03               	btfss	3,2
   424     07CD  2FCF               	goto	u121
   425     07CE  2FD0               	goto	u120
   426     07CF                     u121:
   427     07CF  2FD1               	goto	l778
   428     07D0                     u120:
   429     07D0                     l776:
   430                           
   431                           ;EEPROM_Read_Write.c: 40:       Address = 0;
   432     07D0  01F6               	clrf	main@Address
   433     07D1                     l778:
   434                           
   435                           ;EEPROM_Read_Write.c: 41:     if(RB0==1){
   436     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   437     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   438     07D3  1C06               	btfss	6,0	;volatile
   439     07D4  2FD6               	goto	u131
   440     07D5  2FD7               	goto	u130
   441     07D6                     u131:
   442     07D6  2F6D               	goto	l750
   443     07D7                     u130:
   444     07D7                     l780:
   445                           
   446                           ;EEPROM_Read_Write.c: 42:         for(uint8_t i=0;i<3;i++){
   447     07D7  01F5               	clrf	main@i
   448     07D8                     l786:
   449                           
   450                           ;EEPROM_Read_Write.c: 43:             PORTD=EEPROM_Read(i);
   451     07D8  0875               	movf	main@i,w
   452     07D9  120A  118A  273A  120A  118A  	fcall	_EEPROM_Read
   453     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   454     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   455     07E0  0088               	movwf	8	;volatile
   456     07E1                     l788:
   457                           
   458                           ;EEPROM_Read_Write.c: 44:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   459     07E1  3006               	movlw	6
   460     07E2  00F4               	movwf	??_main+2
   461     07E3  3013               	movlw	19
   462     07E4  00F3               	movwf	??_main+1
   463     07E5  30AD               	movlw	173
   464     07E6  00F2               	movwf	??_main
   465     07E7                     u187:
   466     07E7  0BF2               	decfsz	??_main,f
   467     07E8  2FE7               	goto	u187
   468     07E9  0BF3               	decfsz	??_main+1,f
   469     07EA  2FE7               	goto	u187
   470     07EB  0BF4               	decfsz	??_main+2,f
   471     07EC  2FE7               	goto	u187
   472     07ED  2FEE               	nop2
   473     07EE                     l790:
   474                           
   475                           ;EEPROM_Read_Write.c: 45:         }
   476     07EE  3001               	movlw	1
   477     07EF  00FF               	movwf	btemp+1
   478     07F0  087F               	movf	btemp+1,w
   479     07F1  07F5               	addwf	main@i,f
   480     07F2                     l792:
   481     07F2  3003               	movlw	3
   482     07F3  0275               	subwf	main@i,w
   483     07F4  1C03               	skipc
   484     07F5  2FF7               	goto	u141
   485     07F6  2FF8               	goto	u140
   486     07F7                     u141:
   487     07F7  2FD8               	goto	l786
   488     07F8                     u140:
   489     07F8  2F6D               	goto	l750
   490     07F9  120A  118A  2800   	ljmp	start
   491     07FC                     __end_of_main:
   492                           
   493                           	psect	text1
   494     0749                     __ptext1:	
   495 ;; *************** function _EEPROM_Write *****************
   496 ;; Defined at:
   497 ;;		line 50 in file "EEPROM_Read_Write.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  Address         1    wreg     unsigned char 
   500 ;;  Data            1    0[COMMON] unsigned char 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  Address         1    1[COMMON] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         1       0       0       0       0
   513 ;;      Locals:         1       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525     0749                     _EEPROM_Write:	
   526                           ;psect for function _EEPROM_Write
   527                           
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _EEPROM_Write: [wreg]
   531                           ;EEPROM_Write@Address stored from wreg
   532     0749  00F1               	movwf	EEPROM_Write@Address
   533     074A                     l724:
   534     074A                     l48:	
   535                           ;EEPROM_Read_Write.c: 50: void EEPROM_Write(uint8_t Address, uint8_t Data);EEPROM_Read_W
      +                          rite.c: 51: {;EEPROM_Read_Write.c: 52:   while(EECON1bits.WR);
   536                           
   537     074A  1683               	bsf	3,5	;RP0=1, select bank3
   538     074B  1703               	bsf	3,6	;RP1=1, select bank3
   539     074C  188C               	btfsc	12,1	;volsfr
   540     074D  2F4F               	goto	u81
   541     074E  2F50               	goto	u80
   542     074F                     u81:
   543     074F  2F4A               	goto	l48
   544     0750                     u80:
   545     0750                     l726:
   546                           
   547                           ;EEPROM_Read_Write.c: 53:   EEADR = Address;
   548     0750  0871               	movf	EEPROM_Write@Address,w
   549     0751  1283               	bcf	3,5	;RP0=0, select bank2
   550     0752  1703               	bsf	3,6	;RP1=1, select bank2
   551     0753  008D               	movwf	13	;volatile
   552                           
   553                           ;EEPROM_Read_Write.c: 54:   EEDATA = Data;
   554     0754  0870               	movf	EEPROM_Write@Data,w
   555     0755  008C               	movwf	12	;volatile
   556     0756                     l728:
   557                           
   558                           ;EEPROM_Read_Write.c: 55:   EECON1bits.EEPGD = 0;
   559     0756  1683               	bsf	3,5	;RP0=1, select bank3
   560     0757  1703               	bsf	3,6	;RP1=1, select bank3
   561     0758  138C               	bcf	12,7	;volsfr
   562     0759                     l730:
   563                           
   564                           ;EEPROM_Read_Write.c: 56:   EECON1bits.WREN = 1;
   565     0759  150C               	bsf	12,2	;volsfr
   566     075A                     l732:
   567                           
   568                           ;EEPROM_Read_Write.c: 57:   INTCONbits.GIE = 0;
   569     075A  138B               	bcf	11,7	;volatile
   570                           
   571                           ;EEPROM_Read_Write.c: 58:   EECON2 = 0x55;
   572     075B  3055               	movlw	85
   573     075C  008D               	movwf	13	;volsfr
   574                           
   575                           ;EEPROM_Read_Write.c: 59:   EECON2 = 0xAA;
   576     075D  30AA               	movlw	170
   577     075E  008D               	movwf	13	;volsfr
   578     075F                     l734:
   579                           
   580                           ;EEPROM_Read_Write.c: 60:   EECON1bits.WR = 1;
   581     075F  148C               	bsf	12,1	;volsfr
   582     0760                     l736:
   583                           
   584                           ;EEPROM_Read_Write.c: 61:   INTCONbits.GIE = 1;
   585     0760  178B               	bsf	11,7	;volatile
   586     0761                     l738:
   587                           
   588                           ;EEPROM_Read_Write.c: 62:   EECON1bits.WREN = 0;
   589     0761  110C               	bcf	12,2	;volsfr
   590     0762                     l740:
   591                           
   592                           ;EEPROM_Read_Write.c: 63:   EECON1bits.WR = 0;
   593     0762  108C               	bcf	12,1	;volsfr
   594     0763                     l51:
   595     0763  0008               	return
   596     0764                     __end_of_EEPROM_Write:
   597                           
   598                           	psect	text2
   599     073A                     __ptext2:	
   600 ;; *************** function _EEPROM_Read *****************
   601 ;; Defined at:
   602 ;;		line 65 in file "EEPROM_Read_Write.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  Address         1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  Address         1    0[COMMON] unsigned char 
   607 ;;  Data            1    1[COMMON] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      unsigned char 
   610 ;; Registers used:
   611 ;;		wreg
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         2       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         2       0       0       0       0
   621 ;;Total ram usage:        2 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630     073A                     _EEPROM_Read:	
   631                           ;psect for function _EEPROM_Read
   632                           
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _EEPROM_Read: [wreg]
   636                           ;EEPROM_Read@Address stored from wreg
   637     073A  00F0               	movwf	EEPROM_Read@Address
   638     073B                     l664:
   639                           
   640                           ;EEPROM_Read_Write.c: 65: uint8_t EEPROM_Read(uint8_t Address);EEPROM_Read_Write.c: 66: 
      +                          {;EEPROM_Read_Write.c: 67:   uint8_t Data;;EEPROM_Read_Write.c: 68:   EEADR = Address;
   641     073B  0870               	movf	EEPROM_Read@Address,w
   642     073C  1283               	bcf	3,5	;RP0=0, select bank2
   643     073D  1703               	bsf	3,6	;RP1=1, select bank2
   644     073E  008D               	movwf	13	;volatile
   645     073F                     l666:
   646                           
   647                           ;EEPROM_Read_Write.c: 69:   EECON1bits.EEPGD = 0;
   648     073F  1683               	bsf	3,5	;RP0=1, select bank3
   649     0740  1703               	bsf	3,6	;RP1=1, select bank3
   650     0741  138C               	bcf	12,7	;volsfr
   651     0742                     l668:
   652                           
   653                           ;EEPROM_Read_Write.c: 70:   EECON1bits.RD = 1;
   654     0742  140C               	bsf	12,0	;volsfr
   655                           
   656                           ;EEPROM_Read_Write.c: 71:   Data = EEDATA;
   657     0743  1283               	bcf	3,5	;RP0=0, select bank2
   658     0744  1703               	bsf	3,6	;RP1=1, select bank2
   659     0745  080C               	movf	12,w	;volatile
   660     0746  00F1               	movwf	EEPROM_Read@Data
   661                           
   662                           ;EEPROM_Read_Write.c: 72:   return Data;
   663     0747  0871               	movf	EEPROM_Read@Data,w
   664     0748                     l54:
   665     0748  0008               	return
   666     0749                     __end_of_EEPROM_Read:
   667     007E                     btemp	set	126	;btemp
   668     007E                     wtemp0	set	126
   669                           
   670                           	psect	config
   671                           
   672                           ;Config register CONFIG @ 0x2007
   673                           ;	Oscillator Selection bits
   674                           ;	FOSC = XT, XT oscillator
   675                           ;	Watchdog Timer Enable bit
   676                           ;	WDTE = OFF, WDT disabled
   677                           ;	Power-up Timer Enable bit
   678                           ;	PWRTE = ON, PWRT enabled
   679                           ;	Brown-out Reset Enable bit
   680                           ;	BOREN = ON, BOR enabled
   681                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   682                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   683                           ;	Data EEPROM Memory Code Protection bit
   684                           ;	CPD = OFF, Data EEPROM code protection off
   685                           ;	Flash Program Memory Write Enable bits
   686                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   687                           ;	In-Circuit Debugger Mode bit
   688                           ;	DEBUG = 0x1, unprogrammed default
   689                           ;	Flash Program Memory Code Protection bit
   690                           ;	CP = OFF, Code protection off
   691     2007                     	org	8199
   692     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EEPROM_Read
    _main->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     463
                                              2 COMMON     5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 26 21:54:24 2023

                     l51 0763                       l54 0748                       l48 074A  
                     u80 0750                       u81 074F                       u90 0773  
                     u91 0772                      l730 0759                      l740 0762  
                    l732 075A                      l724 074A                      l734 075F  
                    l726 0750                      l750 076D                      l742 0764  
                    l664 073B                      l736 0760                      l728 0756  
                    l760 0792                      l752 0773                      l744 0768  
                    l666 073F                      l738 0761                      l770 07B9  
                    l762 079A                      l754 077B                      l746 0769  
                    l668 0742                      l780 07D7                      l772 07BD  
                    l764 079E                      l756 077F                      l748 076C  
                    l790 07EE                      l774 07CA                      l766 07AB  
                    l758 078C                      l792 07F2                      l776 07D0  
                    l768 07B1                      l786 07D8                      l778 07D1  
                    l788 07E1                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      u100 0792  
                    u101 0791                      u110 07B1                      u111 07B0  
                    u120 07D0                      u121 07CF                      u130 07D7  
                    u131 07D6                      u140 07F8                      u141 07F7  
                    u157 0785                      u167 07A4                      u177 07C3  
                    u187 07E7                     _main 0764                     btemp 007E  
                   start 0000     __end_of_EEPROM_Write 0764                    ?_main 0070  
                  _EEADR 010D                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    main@i 0075                    status 0003  
                  wtemp0 007E         EEPROM_Write@Data 0070          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0072                   _EEDATA 010C  
                 _EECON2 018D  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           _EEPROM_Write 0749               __pmaintext 0764                  __ptext1 0749  
                __ptext2 073A     end_of_initialization 07FC            ??_EEPROM_Read 0070  
    __end_of_EEPROM_Read 0749      start_initialization 07FC                ___latbits 0002  
            _EEPROM_Read 073A               _EECON1bits 018C            ?_EEPROM_Write 0070  
             _INTCONbits 000B       EEPROM_Read@Address 0070           ??_EEPROM_Write 0071  
           ?_EEPROM_Read 0070      EEPROM_Write@Address 0071          EEPROM_Read@Data 0071  
            main@Address 0076  
