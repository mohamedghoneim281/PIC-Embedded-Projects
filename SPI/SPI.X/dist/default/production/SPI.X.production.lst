

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 29 06:02:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0013                     _SSPBUF	set	19
   167     0008                     _PORTD	set	8
   168     00A4                     _CKP	set	164
   169     00A5                     _SSPEN	set	165
   170     00A3                     _SSPM3	set	163
   171     00A2                     _SSPM2	set	162
   172     00A1                     _SSPM1	set	161
   173     00A0                     _SSPM0	set	160
   174     0032                     _RB2	set	50
   175     0031                     _RB1	set	49
   176     0030                     _RB0	set	48
   177     0088                     _TRISD	set	136
   178     0086                     _TRISB	set	134
   179     043B                     _TRISC3	set	1083
   180     043C                     _TRISC4	set	1084
   181     043D                     _TRISC5	set	1085
   182     04A7                     _SMP	set	1191
   183     04A6                     _CKE	set	1190
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_SPI_Master_Init:
   200     0070                     ??_SPI_Master_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_SPI_Write:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_SPI_Write:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     SPI_Write@Data:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0070                     	ds	1
   218     0071                     ??_main:
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	3
   222     0074                     main@Data:
   223                           
   224                           ; 1 bytes @ 0x4
   225     0074                     	ds	1
   226                           
   227                           	psect	maintext
   228     07A3                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 18 in file "SPI.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  Data            1    4[COMMON] unsigned char 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         1       0       0       0       0
   250 ;;      Temps:          3       0       0       0       0
   251 ;;      Totals:         4       0       0       0       0
   252 ;;Total ram usage:        4 bytes
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		_SPI_Master_Init
   256 ;;		_SPI_Write
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     07A3                     _main:	
   263                           ;psect for function _main
   264                           
   265     07A3                     l655:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   268                           
   269                           
   270                           ;SPI.c: 19:     SPI_Master_Init();
   271     07A3  120A  118A  2793  120A  118A  	fcall	_SPI_Master_Init
   272     07A8                     l657:
   273                           
   274                           ;SPI.c: 20:     uint8_t Data=0;
   275     07A8  01F4               	clrf	main@Data
   276     07A9                     l659:
   277                           
   278                           ;SPI.c: 21:     TRISB=0x07;
   279     07A9  3007               	movlw	7
   280     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   281     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   282     07AC  0086               	movwf	6	;volatile
   283     07AD                     l661:
   284                           
   285                           ;SPI.c: 22:     TRISD=0;
   286     07AD  0188               	clrf	8	;volatile
   287     07AE                     l663:
   288                           
   289                           ;SPI.c: 23:     PORTD=0;
   290     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   291     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   292     07B0  0188               	clrf	8	;volatile
   293     07B1                     l665:
   294                           
   295                           ;SPI.c: 25:         if(RB0){
   296     07B1  1C06               	btfss	6,0	;volatile
   297     07B2  2FB4               	goto	u11
   298     07B3  2FB5               	goto	u10
   299     07B4                     u11:
   300     07B4  2FC6               	goto	l671
   301     07B5                     u10:
   302     07B5                     l667:
   303                           
   304                           ;SPI.c: 26:             Data++;
   305     07B5  3001               	movlw	1
   306     07B6  00FF               	movwf	btemp+1
   307     07B7  087F               	movf	btemp+1,w
   308     07B8  07F4               	addwf	main@Data,f
   309     07B9                     l669:
   310                           
   311                           ;SPI.c: 27:             _delay((unsigned long)((250)*(4000000/4000.0)));
   312     07B9  3002               	movlw	2
   313     07BA  00F3               	movwf	??_main+2
   314     07BB  3045               	movlw	69
   315     07BC  00F2               	movwf	??_main+1
   316     07BD  30A9               	movlw	169
   317     07BE  00F1               	movwf	??_main
   318     07BF                     u47:
   319     07BF  0BF1               	decfsz	??_main,f
   320     07C0  2FBF               	goto	u47
   321     07C1  0BF2               	decfsz	??_main+1,f
   322     07C2  2FBF               	goto	u47
   323     07C3  0BF3               	decfsz	??_main+2,f
   324     07C4  2FBF               	goto	u47
   325     07C5  2FC6               	nop2
   326     07C6                     l671:
   327                           
   328                           ;SPI.c: 29:         if(RB1){
   329     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   330     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   331     07C8  1C86               	btfss	6,1	;volatile
   332     07C9  2FCB               	goto	u21
   333     07CA  2FCC               	goto	u20
   334     07CB                     u21:
   335     07CB  2FDB               	goto	l677
   336     07CC                     u20:
   337     07CC                     l673:
   338                           
   339                           ;SPI.c: 30:             Data--;
   340     07CC  3001               	movlw	1
   341     07CD  02F4               	subwf	main@Data,f
   342     07CE                     l675:
   343                           
   344                           ;SPI.c: 31:             _delay((unsigned long)((250)*(4000000/4000.0)));
   345     07CE  3002               	movlw	2
   346     07CF  00F3               	movwf	??_main+2
   347     07D0  3045               	movlw	69
   348     07D1  00F2               	movwf	??_main+1
   349     07D2  30A9               	movlw	169
   350     07D3  00F1               	movwf	??_main
   351     07D4                     u57:
   352     07D4  0BF1               	decfsz	??_main,f
   353     07D5  2FD4               	goto	u57
   354     07D6  0BF2               	decfsz	??_main+1,f
   355     07D7  2FD4               	goto	u57
   356     07D8  0BF3               	decfsz	??_main+2,f
   357     07D9  2FD4               	goto	u57
   358     07DA  2FDB               	nop2
   359     07DB                     l677:
   360                           
   361                           ;SPI.c: 33:         if(RB2){
   362     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   363     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   364     07DD  1D06               	btfss	6,2	;volatile
   365     07DE  2FE0               	goto	u31
   366     07DF  2FE1               	goto	u30
   367     07E0                     u31:
   368     07E0  2FF4               	goto	l683
   369     07E1                     u30:
   370     07E1                     l679:
   371                           
   372                           ;SPI.c: 34:             SPI_Write(Data);
   373     07E1  0874               	movf	main@Data,w
   374     07E2  120A  118A  278D  120A  118A  	fcall	_SPI_Write
   375     07E7                     l681:
   376                           
   377                           ;SPI.c: 35:             _delay((unsigned long)((250)*(4000000/4000.0)));
   378     07E7  3002               	movlw	2
   379     07E8  00F3               	movwf	??_main+2
   380     07E9  3045               	movlw	69
   381     07EA  00F2               	movwf	??_main+1
   382     07EB  30A9               	movlw	169
   383     07EC  00F1               	movwf	??_main
   384     07ED                     u67:
   385     07ED  0BF1               	decfsz	??_main,f
   386     07EE  2FED               	goto	u67
   387     07EF  0BF2               	decfsz	??_main+1,f
   388     07F0  2FED               	goto	u67
   389     07F1  0BF3               	decfsz	??_main+2,f
   390     07F2  2FED               	goto	u67
   391     07F3  2FF4               	nop2
   392     07F4                     l683:
   393                           
   394                           ;SPI.c: 37:         PORTD=Data;
   395     07F4  0874               	movf	main@Data,w
   396     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   397     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   398     07F7  0088               	movwf	8	;volatile
   399     07F8  2FB1               	goto	l665
   400     07F9  120A  118A  2800   	ljmp	start
   401     07FC                     __end_of_main:
   402                           
   403                           	psect	text1
   404     078D                     __ptext1:	
   405 ;; *************** function _SPI_Write *****************
   406 ;; Defined at:
   407 ;;		line 54 in file "SPI.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  Data            1    wreg     unsigned char 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  Data            1    0[COMMON] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         1       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         1       0       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434     078D                     _SPI_Write:	
   435                           ;psect for function _SPI_Write
   436                           
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _SPI_Write: [wreg]
   440                           ;SPI_Write@Data stored from wreg
   441     078D  00F0               	movwf	SPI_Write@Data
   442     078E                     l653:
   443                           
   444                           ;SPI.c: 55:     SSPBUF=Data;
   445     078E  0870               	movf	SPI_Write@Data,w
   446     078F  1283               	bcf	3,5	;RP0=0, select bank0
   447     0790  1303               	bcf	3,6	;RP1=0, select bank0
   448     0791  0093               	movwf	19	;volatile
   449     0792                     l59:
   450     0792  0008               	return
   451     0793                     __end_of_SPI_Write:
   452                           
   453                           	psect	text2
   454     0793                     __ptext2:	
   455 ;; *************** function _SPI_Master_Init *****************
   456 ;; Defined at:
   457 ;;		line 41 in file "SPI.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		None
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484     0793                     _SPI_Master_Init:	
   485                           ;psect for function _SPI_Master_Init
   486                           
   487     0793                     l651:	
   488                           ;incstack = 0
   489                           ; Regs used in _SPI_Master_Init: []
   490                           
   491                           
   492                           ;SPI.c: 42:     SSPM0=0;
   493     0793  1283               	bcf	3,5	;RP0=0, select bank0
   494     0794  1303               	bcf	3,6	;RP1=0, select bank0
   495     0795  1014               	bcf	20,0	;volatile
   496                           
   497                           ;SPI.c: 43:     SSPM1=0;
   498     0796  1094               	bcf	20,1	;volatile
   499                           
   500                           ;SPI.c: 44:     SSPM2=0;
   501     0797  1114               	bcf	20,2	;volatile
   502                           
   503                           ;SPI.c: 45:     SSPM3=0;
   504     0798  1194               	bcf	20,3	;volatile
   505                           
   506                           ;SPI.c: 46:     SSPEN=1;
   507     0799  1694               	bsf	20,5	;volatile
   508                           
   509                           ;SPI.c: 47:     CKP=0;
   510     079A  1214               	bcf	20,4	;volatile
   511                           
   512                           ;SPI.c: 48:     CKE=0;
   513     079B  1683               	bsf	3,5	;RP0=1, select bank1
   514     079C  1303               	bcf	3,6	;RP1=0, select bank1
   515     079D  1314               	bcf	20,6	;volatile
   516                           
   517                           ;SPI.c: 49:     SMP=0;
   518     079E  1394               	bcf	20,7	;volatile
   519                           
   520                           ;SPI.c: 50:     TRISC5=0;
   521     079F  1287               	bcf	7,5	;volatile
   522                           
   523                           ;SPI.c: 51:     TRISC4=1;
   524     07A0  1607               	bsf	7,4	;volatile
   525                           
   526                           ;SPI.c: 52:     TRISC3=0;
   527     07A1  1187               	bcf	7,3	;volatile
   528     07A2                     l56:
   529     07A2  0008               	return
   530     07A3                     __end_of_SPI_Master_Init:
   531     007E                     btemp	set	126	;btemp
   532     007E                     wtemp0	set	126
   533                           
   534                           	psect	config
   535                           
   536                           ;Config register CONFIG @ 0x2007
   537                           ;	Oscillator Selection bits
   538                           ;	FOSC = XT, XT oscillator
   539                           ;	Watchdog Timer Enable bit
   540                           ;	WDTE = OFF, WDT disabled
   541                           ;	Power-up Timer Enable bit
   542                           ;	PWRTE = ON, PWRT enabled
   543                           ;	Brown-out Reset Enable bit
   544                           ;	BOREN = ON, BOR enabled
   545                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   546                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   547                           ;	Data EEPROM Memory Code Protection bit
   548                           ;	CPD = OFF, Data EEPROM code protection off
   549                           ;	Flash Program Memory Write Enable bits
   550                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   551                           ;	In-Circuit Debugger Mode bit
   552                           ;	DEBUG = 0x1, unprogrammed default
   553                           ;	Flash Program Memory Code Protection bit
   554                           ;	CP = OFF, Code protection off
   555     2007                     	org	8199
   556     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                    _SPI_Master_Init
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_Init
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 29 06:02:12 2023

        _SPI_Master_Init 0793                       l56 07A2                       l59 0792  
                     u10 07B5                       u11 07B4                       u20 07CC  
                     u21 07CB                       u30 07E1                       u31 07E0  
                     u47 07BF                       u57 07D4                       u67 07ED  
                    l651 0793                      l653 078E                      l661 07AD  
                    l671 07C6                      l663 07AE                      l655 07A3  
                    l681 07E7                      l673 07CC                      l665 07B1  
                    l657 07A8                      l683 07F4                      l675 07CE  
                    l667 07B5                      l659 07A9                      l677 07DB  
                    l669 07B9                      l679 07E1                      _CKE 04A6  
                    _CKP 00A4                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _SMP 04A7                     _main 07A3  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTD 0008                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISB 0086  
                  _TRISD 0088                    _SSPEN 00A5                    status 0003  
                  wtemp0 007E  __end_of_SPI_Master_Init 07A3          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0071                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPBUF 0013  
      __end_of_SPI_Write 0793  __end_of__initialization 07FC         ?_SPI_Master_Init 0070  
         __pcstackCOMMON 0070               __pmaintext 07A3            SPI_Write@Data 0070  
                __ptext1 078D                  __ptext2 0793     end_of_initialization 07FC  
              _SPI_Write 078D      start_initialization 07FC               ?_SPI_Write 0070  
              ___latbits 0002              ??_SPI_Write 0070        ??_SPI_Master_Init 0070  
               main@Data 0074  
