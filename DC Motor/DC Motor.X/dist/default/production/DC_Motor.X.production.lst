

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 25 02:47:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0015                     _CCPR1L	set	21
   166     00BC                     _CCP1Y	set	188
   167     00BD                     _CCP1X	set	189
   168     0034                     _RB4	set	52
   169     0033                     _RB3	set	51
   170     0032                     _RB2	set	50
   171     0031                     _RB1	set	49
   172     0030                     _RB0	set	48
   173     0092                     _TMR2ON	set	146
   174     0091                     _T2CKPS1	set	145
   175     0090                     _T2CKPS0	set	144
   176     00BA                     _CCP1M2	set	186
   177     00BB                     _CCP1M3	set	187
   178     0041                     _RD1	set	65
   179     0040                     _RD0	set	64
   180     0092                     _PR2	set	146
   181     0086                     _TRISB	set	134
   182     043A                     _TRISC2	set	1082
   183     0441                     _TRISD1	set	1089
   184     0440                     _TRISD0	set	1088
   185                           
   186                           	psect	cinit
   187     07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FC                     __initialization:
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2F63   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_PWM1_Set_Duty:
   201     0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     PWM1_Set_Duty@DC:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 2 bytes @ 0x0
   209     0070                     	ds	2
   210     0072                     ??_PWM1_Set_Duty:
   211                           
   212                           ; 1 bytes @ 0x2
   213     0072                     	ds	1
   214     0073                     ??_main:
   215                           
   216                           ; 1 bytes @ 0x3
   217     0073                     	ds	3
   218                           
   219                           	psect	maintext
   220     0763                     __pmaintext:	
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 20 in file "DC_Motor.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0
   242 ;;      Temps:          3       0       0       0       0
   243 ;;      Totals:         3       0       0       0       0
   244 ;;Total ram usage:        3 bytes
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		_PWM1_Set_Duty
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     0763                     _main:	
   254                           ;psect for function _main
   255                           
   256     0763                     l717:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   259                           
   260                           
   261                           ;DC_Motor.c: 21:     TRISB=0b00011111;
   262     0763  301F               	movlw	31
   263     0764  1683               	bsf	3,5	;RP0=1, select bank1
   264     0765  1303               	bcf	3,6	;RP1=0, select bank1
   265     0766  0086               	movwf	6	;volatile
   266     0767                     l719:
   267                           
   268                           ;DC_Motor.c: 22:     TRISD0=0;
   269     0767  1008               	bcf	8,0	;volatile
   270     0768                     l721:
   271                           
   272                           ;DC_Motor.c: 23:     TRISD1=0;
   273     0768  1088               	bcf	8,1	;volatile
   274     0769                     l723:
   275                           
   276                           ;DC_Motor.c: 24:     RD0=0;
   277     0769  1283               	bcf	3,5	;RP0=0, select bank0
   278     076A  1303               	bcf	3,6	;RP1=0, select bank0
   279     076B  1008               	bcf	8,0	;volatile
   280     076C                     l725:
   281                           
   282                           ;DC_Motor.c: 25:     RD1=1;
   283     076C  1488               	bsf	8,1	;volatile
   284     076D                     l727:
   285                           
   286                           ;DC_Motor.c: 26:     CCP1M3=1;
   287     076D  1597               	bsf	23,3	;volatile
   288     076E                     l729:
   289                           
   290                           ;DC_Motor.c: 27:     CCP1M2=1;
   291     076E  1517               	bsf	23,2	;volatile
   292     076F                     l731:
   293                           
   294                           ;DC_Motor.c: 28:     TRISC2=0;
   295     076F  1683               	bsf	3,5	;RP0=1, select bank1
   296     0770  1303               	bcf	3,6	;RP1=0, select bank1
   297     0771  1107               	bcf	7,2	;volatile
   298                           
   299                           ;DC_Motor.c: 29:     PR2=124;
   300     0772  307C               	movlw	124
   301     0773  0092               	movwf	18	;volatile
   302     0774                     l733:
   303                           
   304                           ;DC_Motor.c: 30:     T2CKPS0=0;
   305     0774  1283               	bcf	3,5	;RP0=0, select bank0
   306     0775  1303               	bcf	3,6	;RP1=0, select bank0
   307     0776  1012               	bcf	18,0	;volatile
   308     0777                     l735:
   309                           
   310                           ;DC_Motor.c: 31:     T2CKPS1=1;
   311     0777  1492               	bsf	18,1	;volatile
   312     0778                     l737:
   313                           
   314                           ;DC_Motor.c: 32:     TMR2ON=1;
   315     0778  1512               	bsf	18,2	;volatile
   316     0779                     l739:
   317                           
   318                           ;DC_Motor.c: 34:         if(RB0){
   319     0779  1283               	bcf	3,5	;RP0=0, select bank0
   320     077A  1303               	bcf	3,6	;RP1=0, select bank0
   321     077B  1C06               	btfss	6,0	;volatile
   322     077C  2F7E               	goto	u141
   323     077D  2F7F               	goto	u140
   324     077E                     u141:
   325     077E  2F90               	goto	l743
   326     077F                     u140:
   327     077F                     l741:
   328                           
   329                           ;DC_Motor.c: 35:             RD0=~RD0;
   330     077F  3001               	movlw	1
   331     0780  0688               	xorwf	8,f
   332                           
   333                           ;DC_Motor.c: 36:             RD1=~RD1;
   334     0781  3002               	movlw	2
   335     0782  0688               	xorwf	8,f
   336                           
   337                           ;DC_Motor.c: 37:             _delay((unsigned long)((500)*(4000000/4000.0)));
   338     0783  3003               	movlw	3
   339     0784  00F5               	movwf	??_main+2
   340     0785  308A               	movlw	138
   341     0786  00F4               	movwf	??_main+1
   342     0787  3055               	movlw	85
   343     0788  00F3               	movwf	??_main
   344     0789                     u197:
   345     0789  0BF3               	decfsz	??_main,f
   346     078A  2F89               	goto	u197
   347     078B  0BF4               	decfsz	??_main+1,f
   348     078C  2F89               	goto	u197
   349     078D  0BF5               	decfsz	??_main+2,f
   350     078E  2F89               	goto	u197
   351     078F  2F90               	nop2
   352     0790                     l743:
   353                           
   354                           ;DC_Motor.c: 40:         if(RB1){
   355     0790  1283               	bcf	3,5	;RP0=0, select bank0
   356     0791  1303               	bcf	3,6	;RP1=0, select bank0
   357     0792  1C86               	btfss	6,1	;volatile
   358     0793  2F95               	goto	u151
   359     0794  2F96               	goto	u150
   360     0795                     u151:
   361     0795  2FA7               	goto	l749
   362     0796                     u150:
   363     0796                     l745:
   364                           
   365                           ;DC_Motor.c: 41:             PWM1_Set_Duty(0);
   366     0796  3000               	movlw	0
   367     0797  00F0               	movwf	PWM1_Set_Duty@DC
   368     0798  00F1               	movwf	PWM1_Set_Duty@DC+1
   369     0799  120A  118A  2741  120A  118A  	fcall	_PWM1_Set_Duty
   370     079E                     l747:
   371                           
   372                           ;DC_Motor.c: 42:             _delay((unsigned long)((100)*(4000000/4000.0)));
   373     079E  3082               	movlw	130
   374     079F  00F4               	movwf	??_main+1
   375     07A0  30DD               	movlw	221
   376     07A1  00F3               	movwf	??_main
   377     07A2                     u207:
   378     07A2  0BF3               	decfsz	??_main,f
   379     07A3  2FA2               	goto	u207
   380     07A4  0BF4               	decfsz	??_main+1,f
   381     07A5  2FA2               	goto	u207
   382     07A6  2FA7               	nop2
   383     07A7                     l749:
   384                           
   385                           ;DC_Motor.c: 44:         if(RB2){
   386     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   387     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   388     07A9  1D06               	btfss	6,2	;volatile
   389     07AA  2FAC               	goto	u161
   390     07AB  2FAD               	goto	u160
   391     07AC                     u161:
   392     07AC  2FBF               	goto	l755
   393     07AD                     u160:
   394     07AD                     l751:
   395                           
   396                           ;DC_Motor.c: 45:             PWM1_Set_Duty(250);
   397     07AD  30FA               	movlw	250
   398     07AE  00F0               	movwf	PWM1_Set_Duty@DC
   399     07AF  3000               	movlw	0
   400     07B0  00F1               	movwf	PWM1_Set_Duty@DC+1
   401     07B1  120A  118A  2741  120A  118A  	fcall	_PWM1_Set_Duty
   402     07B6                     l753:
   403                           
   404                           ;DC_Motor.c: 46:             _delay((unsigned long)((100)*(4000000/4000.0)));
   405     07B6  3082               	movlw	130
   406     07B7  00F4               	movwf	??_main+1
   407     07B8  30DD               	movlw	221
   408     07B9  00F3               	movwf	??_main
   409     07BA                     u217:
   410     07BA  0BF3               	decfsz	??_main,f
   411     07BB  2FBA               	goto	u217
   412     07BC  0BF4               	decfsz	??_main+1,f
   413     07BD  2FBA               	goto	u217
   414     07BE  2FBF               	nop2
   415     07BF                     l755:
   416                           
   417                           ;DC_Motor.c: 48:         if(RB3){
   418     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   419     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   420     07C1  1D86               	btfss	6,3	;volatile
   421     07C2  2FC4               	goto	u171
   422     07C3  2FC5               	goto	u170
   423     07C4                     u171:
   424     07C4  2FD7               	goto	l761
   425     07C5                     u170:
   426     07C5                     l757:
   427                           
   428                           ;DC_Motor.c: 49:             PWM1_Set_Duty(375);
   429     07C5  3077               	movlw	119
   430     07C6  00F0               	movwf	PWM1_Set_Duty@DC
   431     07C7  3001               	movlw	1
   432     07C8  00F1               	movwf	PWM1_Set_Duty@DC+1
   433     07C9  120A  118A  2741  120A  118A  	fcall	_PWM1_Set_Duty
   434     07CE                     l759:
   435                           
   436                           ;DC_Motor.c: 50:             _delay((unsigned long)((100)*(4000000/4000.0)));}
   437     07CE  3082               	movlw	130
   438     07CF  00F4               	movwf	??_main+1
   439     07D0  30DD               	movlw	221
   440     07D1  00F3               	movwf	??_main
   441     07D2                     u227:
   442     07D2  0BF3               	decfsz	??_main,f
   443     07D3  2FD2               	goto	u227
   444     07D4  0BF4               	decfsz	??_main+1,f
   445     07D5  2FD2               	goto	u227
   446     07D6  2FD7               	nop2
   447     07D7                     l761:
   448                           
   449                           ;DC_Motor.c: 51:         if(RB4){
   450     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   451     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   452     07D9  1E06               	btfss	6,4	;volatile
   453     07DA  2FDC               	goto	u181
   454     07DB  2FDD               	goto	u180
   455     07DC                     u181:
   456     07DC  2FEF               	goto	l767
   457     07DD                     u180:
   458     07DD                     l763:
   459                           
   460                           ;DC_Motor.c: 52:             PWM1_Set_Duty(500);
   461     07DD  30F4               	movlw	244
   462     07DE  00F0               	movwf	PWM1_Set_Duty@DC
   463     07DF  3001               	movlw	1
   464     07E0  00F1               	movwf	PWM1_Set_Duty@DC+1
   465     07E1  120A  118A  2741  120A  118A  	fcall	_PWM1_Set_Duty
   466     07E6                     l765:
   467                           
   468                           ;DC_Motor.c: 53:             _delay((unsigned long)((100)*(4000000/4000.0)));}
   469     07E6  3082               	movlw	130
   470     07E7  00F4               	movwf	??_main+1
   471     07E8  30DD               	movlw	221
   472     07E9  00F3               	movwf	??_main
   473     07EA                     u237:
   474     07EA  0BF3               	decfsz	??_main,f
   475     07EB  2FEA               	goto	u237
   476     07EC  0BF4               	decfsz	??_main+1,f
   477     07ED  2FEA               	goto	u237
   478     07EE  2FEF               	nop2
   479     07EF                     l767:
   480                           
   481                           ;DC_Motor.c: 54:         _delay((unsigned long)((10)*(4000000/4000.0)));
   482     07EF  300D               	movlw	13
   483     07F0  00F4               	movwf	??_main+1
   484     07F1  30FB               	movlw	251
   485     07F2  00F3               	movwf	??_main
   486     07F3                     u247:
   487     07F3  0BF3               	decfsz	??_main,f
   488     07F4  2FF3               	goto	u247
   489     07F5  0BF4               	decfsz	??_main+1,f
   490     07F6  2FF3               	goto	u247
   491     07F7  2FF8               	nop2
   492     07F8  2F79               	goto	l739
   493     07F9  120A  118A  2800   	ljmp	start
   494     07FC                     __end_of_main:
   495                           
   496                           	psect	text1
   497     0741                     __ptext1:	
   498 ;; *************** function _PWM1_Set_Duty *****************
   499 ;; Defined at:
   500 ;;		line 59 in file "DC_Motor.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  DC              2    0[COMMON] unsigned int 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         2       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0
   517 ;;      Totals:         3       0       0       0       0
   518 ;;Total ram usage:        3 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     0741                     _PWM1_Set_Duty:	
   528                           ;psect for function _PWM1_Set_Duty
   529                           
   530     0741                     l711:	
   531                           ;incstack = 0
   532                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   533                           
   534                           
   535                           ;DC_Motor.c: 60:     if(DC<1024){
   536     0741  3004               	movlw	4
   537     0742  0271               	subwf	PWM1_Set_Duty@DC+1,w
   538     0743  3000               	movlw	0
   539     0744  1903               	skipnz
   540     0745  0270               	subwf	PWM1_Set_Duty@DC,w
   541     0746  1803               	skipnc
   542     0747  2F49               	goto	u101
   543     0748  2F4A               	goto	u100
   544     0749                     u101:
   545     0749  2F62               	goto	l61
   546     074A                     u100:
   547     074A                     l713:
   548                           
   549                           ;DC_Motor.c: 61:         CCP1X=DC & 2;
   550     074A  1283               	bcf	3,5	;RP0=0, select bank0
   551     074B  1303               	bcf	3,6	;RP1=0, select bank0
   552     074C  1297               	bcf	23,5	;volatile
   553                           
   554                           ;DC_Motor.c: 62:         CCP1Y=DC& 1;
   555     074D  1870               	btfsc	PWM1_Set_Duty@DC,0
   556     074E  2F50               	goto	u111
   557     074F  2F54               	goto	u110
   558     0750                     u111:
   559     0750  1283               	bcf	3,5	;RP0=0, select bank0
   560     0751  1303               	bcf	3,6	;RP1=0, select bank0
   561     0752  1617               	bsf	23,4	;volatile
   562     0753  2F57               	goto	u124
   563     0754                     u110:
   564     0754  1283               	bcf	3,5	;RP0=0, select bank0
   565     0755  1303               	bcf	3,6	;RP1=0, select bank0
   566     0756  1217               	bcf	23,4	;volatile
   567     0757                     u124:
   568     0757                     l715:
   569                           
   570                           ;DC_Motor.c: 63:         CCPR1L=DC<<2;
   571     0757  0870               	movf	PWM1_Set_Duty@DC,w
   572     0758  00F2               	movwf	??_PWM1_Set_Duty
   573     0759  3001               	movlw	1
   574     075A                     u135:
   575     075A  1003               	clrc
   576     075B  0DF2               	rlf	??_PWM1_Set_Duty,f
   577     075C  3EFF               	addlw	-1
   578     075D  1D03               	skipz
   579     075E  2F5A               	goto	u135
   580     075F  1003               	clrc
   581     0760  0D72               	rlf	??_PWM1_Set_Duty,w
   582     0761  0095               	movwf	21	;volatile
   583     0762                     l61:
   584     0762  0008               	return
   585     0763                     __end_of_PWM1_Set_Duty:
   586     007E                     btemp	set	126	;btemp
   587     007E                     wtemp0	set	126
   588                           
   589                           	psect	config
   590                           
   591                           ;Config register CONFIG @ 0x2007
   592                           ;	Oscillator Selection bits
   593                           ;	FOSC = XT, XT oscillator
   594                           ;	Watchdog Timer Enable bit
   595                           ;	WDTE = OFF, WDT disabled
   596                           ;	Power-up Timer Enable bit
   597                           ;	PWRTE = ON, PWRT enabled
   598                           ;	Brown-out Reset Enable bit
   599                           ;	BOREN = ON, BOR enabled
   600                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   601                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   602                           ;	Data EEPROM Memory Code Protection bit
   603                           ;	CPD = OFF, Data EEPROM code protection off
   604                           ;	Flash Program Memory Write Enable bits
   605                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   606                           ;	In-Circuit Debugger Mode bit
   607                           ;	DEBUG = 0x1, unprogrammed default
   608                           ;	Flash Program Memory Code Protection bit
   609                           ;	CP = OFF, Code protection off
   610     2007                     	org	8199
   611     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     370
                                              3 COMMON     3     3      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        3     1      2     370
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 25 02:47:05 2023

                     l61 0762                      l711 0741                      l713 074A  
                    l721 0768                      l715 0757                      l731 076F  
                    l723 0769                      l741 077F                      l733 0774  
                    l725 076C                      l717 0763                      l751 07AD  
                    l743 0790                      l735 0777                      l727 076D  
                    l719 0767                      l761 07D7                      l753 07B6  
                    l745 0796                      l737 0778                      l729 076E  
                    l763 07DD                      l755 07BF                      l747 079E  
                    l739 0779                      l765 07E6                      l757 07C5  
                    l749 07A7                      l767 07EF                      l759 07CE  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RD0 0040                      _RB4 0034  
                    _RD1 0041                      u100 074A                      u101 0749  
                    u110 0754                      u111 0750                      u124 0757  
                    u140 077F                      u141 077E                      u150 0796  
                    u135 075A                      u207 07A2                      u151 0795  
                    u160 07AD                      u217 07BA                      u161 07AC  
                    u170 07C5                      u227 07D2                      u171 07C4  
                    u180 07DD                      u237 07EA                      u181 07DC  
                    _PR2 0092                      u247 07F3                      u197 0789  
                   _main 0763                     btemp 007E                     start 0000  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0073  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISD0 0440                   _TRISC2 043A  
                 _TRISD1 0441  __end_of__initialization 07FC           __pcstackCOMMON 0070  
  __end_of_PWM1_Set_Duty 0763               __pmaintext 0763                  _T2CKPS0 0090  
                _T2CKPS1 0091                  __ptext1 0741     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002            _PWM1_Set_Duty 0741  
         ?_PWM1_Set_Duty 0070          ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  
