

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 03 05:02:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0013                     _SSPBUF	set	19
   172     0014                     _SSPCON	set	20
   173     0008                     _PORTD	set	8
   174     0093                     _SSPADD	set	147
   175     0094                     _SSPSTAT	set	148
   176     0091                     _SSPCON2	set	145
   177     0088                     _TRISD	set	136
   178     048B                     _RCEN	set	1163
   179     048E                     _ACKSTAT	set	1166
   180     048C                     _ACKEN	set	1164
   181     048D                     _ACKDT	set	1165
   182     0489                     _RSEN	set	1161
   183     048A                     _PEN	set	1162
   184     0488                     _SEN	set	1160
   185     043C                     _TRISC4	set	1084
   186     043B                     _TRISC3	set	1083
   187                           
   188                           	psect	cinit
   189     07FC                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FC                     __initialization:
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2FC9   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0070                     __pcstackCOMMON:
   202     0070                     ?_I2C_Master_Init:
   203     0070                     ??_I2C_Master_Init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_I2C_Start:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_I2C_Start:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_I2C_Write:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_I2C_Write:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?_I2C_Read:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ??_I2C_Read:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_I2C_Stop:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_I2C_Stop:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_I2C_Wait:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_I2C_Wait:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_I2C_NACK:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_I2C_NACK:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     I2C_Write@Data:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     I2C_Read@Data:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253     0070                     	ds	1
   254     0071                     ??_main:
   255                           
   256                           ; 1 bytes @ 0x1
   257     0071                     	ds	3
   258                           
   259                           	psect	maintext
   260     07C9                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 22 in file "I2C_Master_Receiver.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0
   282 ;;      Temps:          3       0       0       0       0
   283 ;;      Totals:         3       0       0       0       0
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels required when called: 3
   286 ;; This function calls:
   287 ;;		_I2C_Master_Init
   288 ;;		_I2C_Read
   289 ;;		_I2C_Start
   290 ;;		_I2C_Stop
   291 ;;		_I2C_Write
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     07C9                     _main:	
   298                           ;psect for function _main
   299                           
   300     07C9                     l722:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   303                           
   304                           
   305                           ;I2C_Master_Receiver.c: 23:     TRISD=0;
   306     07C9  1683               	bsf	3,5	;RP0=1, select bank1
   307     07CA  1303               	bcf	3,6	;RP1=0, select bank1
   308     07CB  0188               	clrf	8	;volatile
   309                           
   310                           ;I2C_Master_Receiver.c: 24:     PORTD=0;
   311     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   312     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   313     07CE  0188               	clrf	8	;volatile
   314     07CF                     l724:
   315                           
   316                           ;I2C_Master_Receiver.c: 25:     I2C_Master_Init();
   317     07CF  120A  118A  2787  120A  118A  	fcall	_I2C_Master_Init
   318     07D4                     l726:
   319                           
   320                           ;I2C_Master_Receiver.c: 27:         I2C_Start();
   321     07D4  120A  118A  276B  120A  118A  	fcall	_I2C_Start
   322     07D9                     l728:
   323                           
   324                           ;I2C_Master_Receiver.c: 28:         I2C_Write(0x41);
   325     07D9  3041               	movlw	65
   326     07DA  120A  118A  27A1  120A  118A  	fcall	_I2C_Write
   327     07DF                     l730:
   328                           
   329                           ;I2C_Master_Receiver.c: 29:         PORTD=I2C_Read();
   330     07DF  120A  118A  27B1  120A  118A  	fcall	_I2C_Read
   331     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   332     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   333     07E6  0088               	movwf	8	;volatile
   334     07E7                     l732:
   335                           
   336                           ;I2C_Master_Receiver.c: 30:         I2C_Stop();
   337     07E7  120A  118A  2774  120A  118A  	fcall	_I2C_Stop
   338     07EC                     l734:
   339                           
   340                           ;I2C_Master_Receiver.c: 31:         _delay((unsigned long)((100)*(16000000/4000.0)));
   341     07EC  3003               	movlw	3
   342     07ED  00F3               	movwf	??_main+2
   343     07EE  3008               	movlw	8
   344     07EF  00F2               	movwf	??_main+1
   345     07F0  3077               	movlw	119
   346     07F1  00F1               	movwf	??_main
   347     07F2                     u37:
   348     07F2  0BF1               	decfsz	??_main,f
   349     07F3  2FF2               	goto	u37
   350     07F4  0BF2               	decfsz	??_main+1,f
   351     07F5  2FF2               	goto	u37
   352     07F6  0BF3               	decfsz	??_main+2,f
   353     07F7  2FF2               	goto	u37
   354     07F8  2FD4               	goto	l726
   355     07F9  120A  118A  2800   	ljmp	start
   356     07FC                     __end_of_main:
   357                           
   358                           	psect	text1
   359     07A1                     __ptext1:	
   360 ;; *************** function _I2C_Write *****************
   361 ;; Defined at:
   362 ;;		line 72 in file "I2C_Master_Receiver.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;  Data            1    wreg     unsigned char 
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  Data            1    0[COMMON] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      unsigned char 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         1       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         1       0       0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 1
   383 ;; This function calls:
   384 ;;		_I2C_Wait
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390     07A1                     _I2C_Write:	
   391                           ;psect for function _I2C_Write
   392                           
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   396                           ;I2C_Write@Data stored from wreg
   397     07A1  00F0               	movwf	I2C_Write@Data
   398     07A2                     l698:
   399                           
   400                           ;I2C_Master_Receiver.c: 73:     I2C_Wait();
   401     07A2  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   402     07A7                     l700:
   403                           
   404                           ;I2C_Master_Receiver.c: 74:     SSPBUF=Data;
   405     07A7  0870               	movf	I2C_Write@Data,w
   406     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   407     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   408     07AA  0093               	movwf	19	;volatile
   409     07AB                     l702:
   410                           
   411                           ;I2C_Master_Receiver.c: 75:     I2C_Wait();
   412     07AB  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   413     07B0                     l704:
   414     07B0                     l79:	
   415                           ;I2C_Master_Receiver.c: 76:     return ACKSTAT;;	Return value of _I2C_Write is never use
      +                          d
   416                           
   417     07B0  0008               	return
   418     07B1                     __end_of_I2C_Write:
   419                           
   420                           	psect	text2
   421     0774                     __ptext2:	
   422 ;; *************** function _I2C_Stop *****************
   423 ;; Defined at:
   424 ;;		line 51 in file "I2C_Master_Receiver.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 1
   445 ;; This function calls:
   446 ;;		_I2C_Wait
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     0774                     _I2C_Stop:	
   453                           ;psect for function _I2C_Stop
   454                           
   455     0774                     l718:	
   456                           ;incstack = 0
   457                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   458                           
   459                           
   460                           ;I2C_Master_Receiver.c: 53:   I2C_Wait();
   461     0774  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   462     0779                     l720:
   463                           
   464                           ;I2C_Master_Receiver.c: 54:   PEN = 1;
   465     0779  1683               	bsf	3,5	;RP0=1, select bank1
   466     077A  1303               	bcf	3,6	;RP1=0, select bank1
   467     077B  1511               	bsf	17,2	;volatile
   468     077C                     l67:
   469     077C  0008               	return
   470     077D                     __end_of_I2C_Stop:
   471                           
   472                           	psect	text3
   473     076B                     __ptext3:	
   474 ;; *************** function _I2C_Start *****************
   475 ;; Defined at:
   476 ;;		line 47 in file "I2C_Master_Receiver.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 1
   497 ;; This function calls:
   498 ;;		_I2C_Wait
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504     076B                     _I2C_Start:	
   505                           ;psect for function _I2C_Start
   506                           
   507     076B                     l694:	
   508                           ;incstack = 0
   509                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;I2C_Master_Receiver.c: 48:     I2C_Wait();
   513     076B  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   514     0770                     l696:
   515                           
   516                           ;I2C_Master_Receiver.c: 49:     SEN=1;
   517     0770  1683               	bsf	3,5	;RP0=1, select bank1
   518     0771  1303               	bcf	3,6	;RP1=0, select bank1
   519     0772  1411               	bsf	17,0	;volatile
   520     0773                     l64:
   521     0773  0008               	return
   522     0774                     __end_of_I2C_Start:
   523                           
   524                           	psect	text4
   525     07B1                     __ptext4:	
   526 ;; *************** function _I2C_Read *****************
   527 ;; Defined at:
   528 ;;		line 78 in file "I2C_Master_Receiver.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  Data            1    0[COMMON] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         1       0       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 2
   549 ;; This function calls:
   550 ;;		_I2C_NACK
   551 ;;		_I2C_Wait
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557     07B1                     _I2C_Read:	
   558                           ;psect for function _I2C_Read
   559                           
   560     07B1                     l708:	
   561                           ;incstack = 0
   562                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;I2C_Master_Receiver.c: 79:     unsigned char Data;;I2C_Master_Receiver.c: 80:     I2C_W
      +                          ait();
   566     07B1  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   567     07B6                     l710:
   568                           
   569                           ;I2C_Master_Receiver.c: 81:     RCEN=1;
   570     07B6  1683               	bsf	3,5	;RP0=1, select bank1
   571     07B7  1303               	bcf	3,6	;RP1=0, select bank1
   572     07B8  1591               	bsf	17,3	;volatile
   573                           
   574                           ;I2C_Master_Receiver.c: 82:     I2C_Wait();
   575     07B9  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   576     07BE                     l712:
   577                           
   578                           ;I2C_Master_Receiver.c: 83:     Data=SSPBUF;
   579     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   580     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   581     07C0  0813               	movf	19,w	;volatile
   582     07C1  00F0               	movwf	I2C_Read@Data
   583     07C2                     l714:
   584                           
   585                           ;I2C_Master_Receiver.c: 84:     I2C_NACK();
   586     07C2  120A  118A  277D  120A  118A  	fcall	_I2C_NACK
   587                           
   588                           ;I2C_Master_Receiver.c: 85:     return Data;
   589     07C7  0870               	movf	I2C_Read@Data,w
   590     07C8                     l82:
   591     07C8  0008               	return
   592     07C9                     __end_of_I2C_Read:
   593                           
   594                           	psect	text5
   595     077D                     __ptext5:	
   596 ;; *************** function _I2C_NACK *****************
   597 ;; Defined at:
   598 ;;		line 66 in file "I2C_Master_Receiver.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 1
   619 ;; This function calls:
   620 ;;		_I2C_Wait
   621 ;; This function is called by:
   622 ;;		_I2C_Read
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626     077D                     _I2C_NACK:	
   627                           ;psect for function _I2C_NACK
   628                           
   629     077D                     l678:	
   630                           ;incstack = 0
   631                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;I2C_Master_Receiver.c: 68:   I2C_Wait();
   635     077D  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   636     0782                     l680:
   637                           
   638                           ;I2C_Master_Receiver.c: 69:   ACKDT = 1;
   639     0782  1683               	bsf	3,5	;RP0=1, select bank1
   640     0783  1303               	bcf	3,6	;RP1=0, select bank1
   641     0784  1691               	bsf	17,5	;volatile
   642     0785                     l682:
   643                           
   644                           ;I2C_Master_Receiver.c: 70:   ACKEN = 1;
   645     0785  1611               	bsf	17,4	;volatile
   646     0786                     l76:
   647     0786  0008               	return
   648     0787                     __end_of_I2C_NACK:
   649                           
   650                           	psect	text6
   651     0794                     __ptext6:	
   652 ;; *************** function _I2C_Wait *****************
   653 ;; Defined at:
   654 ;;		line 43 in file "I2C_Master_Receiver.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_I2C_Start
   678 ;;		_I2C_Stop
   679 ;;		_I2C_NACK
   680 ;;		_I2C_Write
   681 ;;		_I2C_Read
   682 ;;		_I2C_Restart
   683 ;;		_I2C_ACK
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687     0794                     _I2C_Wait:	
   688                           ;psect for function _I2C_Wait
   689                           
   690     0794                     l674:	
   691                           ;incstack = 0
   692                           ; Regs used in _I2C_Wait: [wreg+status,2]
   693                           
   694     0794                     l58:	
   695                           ;I2C_Master_Receiver.c: 45:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   696                           
   697     0794  1683               	bsf	3,5	;RP0=1, select bank1
   698     0795  1303               	bcf	3,6	;RP1=0, select bank1
   699     0796  1914               	btfsc	20,2	;volatile
   700     0797  2F99               	goto	u11
   701     0798  2F9A               	goto	u10
   702     0799                     u11:
   703     0799  2F94               	goto	l58
   704     079A                     u10:
   705     079A                     l676:
   706     079A  0811               	movf	17,w	;volatile
   707     079B  391F               	andlw	31
   708     079C  1D03               	btfss	3,2
   709     079D  2F9F               	goto	u21
   710     079E  2FA0               	goto	u20
   711     079F                     u21:
   712     079F  2F94               	goto	l58
   713     07A0                     u20:
   714     07A0                     l61:
   715     07A0  0008               	return
   716     07A1                     __end_of_I2C_Wait:
   717                           
   718                           	psect	text7
   719     0787                     __ptext7:	
   720 ;; *************** function _I2C_Master_Init *****************
   721 ;; Defined at:
   722 ;;		line 35 in file "I2C_Master_Receiver.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749     0787                     _I2C_Master_Init:	
   750                           ;psect for function _I2C_Master_Init
   751                           
   752     0787                     l684:	
   753                           ;incstack = 0
   754                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
   755                           
   756                           
   757                           ;I2C_Master_Receiver.c: 36:     SSPCON=0b00101000;
   758     0787  3028               	movlw	40
   759     0788  1283               	bcf	3,5	;RP0=0, select bank0
   760     0789  1303               	bcf	3,6	;RP1=0, select bank0
   761     078A  0094               	movwf	20	;volatile
   762     078B                     l686:
   763                           
   764                           ;I2C_Master_Receiver.c: 37:     SSPCON2=0;
   765     078B  1683               	bsf	3,5	;RP0=1, select bank1
   766     078C  1303               	bcf	3,6	;RP1=0, select bank1
   767     078D  0191               	clrf	17	;volatile
   768     078E                     l688:
   769                           
   770                           ;I2C_Master_Receiver.c: 38:     SSPSTAT=0;
   771     078E  0194               	clrf	20	;volatile
   772                           
   773                           ;I2C_Master_Receiver.c: 39:     SSPADD = ((16000000/4)/100000) - 1;
   774     078F  3027               	movlw	39
   775     0790  0093               	movwf	19	;volatile
   776     0791                     l690:
   777                           
   778                           ;I2C_Master_Receiver.c: 40:     TRISC3 = 1;
   779     0791  1587               	bsf	7,3	;volatile
   780     0792                     l692:
   781                           
   782                           ;I2C_Master_Receiver.c: 41:     TRISC4 = 1;
   783     0792  1607               	bsf	7,4	;volatile
   784     0793                     l55:
   785     0793  0008               	return
   786     0794                     __end_of_I2C_Master_Init:
   787     007E                     btemp	set	126	;btemp
   788     007E                     wtemp0	set	126
   789                           
   790                           	psect	config
   791                           
   792                           ;Config register CONFIG @ 0x2007
   793                           ;	Oscillator Selection bits
   794                           ;	FOSC = XT, XT oscillator
   795                           ;	Watchdog Timer Enable bit
   796                           ;	WDTE = OFF, WDT disabled
   797                           ;	Power-up Timer Enable bit
   798                           ;	PWRTE = ON, PWRT enabled
   799                           ;	Brown-out Reset Enable bit
   800                           ;	BOREN = ON, BOR enabled
   801                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   802                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   803                           ;	Data EEPROM Memory Code Protection bit
   804                           ;	CPD = OFF, Data EEPROM code protection off
   805                           ;	Flash Program Memory Write Enable bits
   806                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   807                           ;	In-Circuit Debugger Mode bit
   808                           ;	DEBUG = 0x1, unprogrammed default
   809                           ;	Flash Program Memory Code Protection bit
   810                           ;	CP = OFF, Code protection off
   811     2007                     	org	8199
   812     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Read
    _main->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              1 COMMON     3     3      0
                    _I2C_Master_Init
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Read
     _I2C_NACK
       _I2C_Wait
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write
     _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 03 05:02:18 2023

                     l61 07A0                       l55 0793                       l64 0773  
                     l58 0794                       l82 07C8                       l67 077C  
                     l76 0786                       l79 07B0                       u10 079A  
                     u11 0799                       u20 07A0                       u21 079F  
                     u37 07F2                      l700 07A7                      l710 07B6  
                    l702 07AB                      l712 07BE                      l720 0779  
                    l704 07B0                      l714 07C2                      l730 07DF  
                    l722 07C9                      l708 07B1                      l732 07E7  
                    l724 07CF                      l718 0774                      l734 07EC  
                    l726 07D4                      l680 0782                      l728 07D9  
                    l690 0791                      l674 0794                      l682 0785  
                    l692 0792                      l684 0787                      l676 079A  
                    l686 078B                      l678 077D                      l694 076B  
                    l688 078E                      l696 0770                      l698 07A2  
                    _PEN 048A                      _SEN 0488                     _RCEN 048B  
                   _RSEN 0489         __end_of_I2C_NACK 0787                     _main 07C9  
       __end_of_I2C_Read 07C9                     btemp 007E         __end_of_I2C_Wait 07A1  
       __end_of_I2C_Stop 077D                     start 0000         ?_I2C_Master_Init 0070  
                  ?_main 0070                    _ACKEN 048C                    _ACKDT 048D  
                  _PORTD 0008                    _TRISD 0088        __end_of_I2C_Start 0774  
      __end_of_I2C_Write 07B1                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0071  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ?_I2C_NACK 0070  
              ?_I2C_Read 0070                ?_I2C_Wait 0070                ?_I2C_Stop 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_I2C_NACK 0070  
             ??_I2C_Read 0070               ??_I2C_Wait 0070               ??_I2C_Stop 0070  
           I2C_Read@Data 0070               __pmaintext 07C9                  _ACKSTAT 048E  
                _SSPCON2 0091                  _SSPSTAT 0094                _I2C_Start 076B  
              _I2C_Write 07A1                  __ptext1 07A1                  __ptext2 0774  
                __ptext3 076B                  __ptext4 07B1                  __ptext5 077D  
                __ptext6 0794                  __ptext7 0787     end_of_initialization 07FC  
             ?_I2C_Start 0070               ?_I2C_Write 0070      start_initialization 07FC  
      ??_I2C_Master_Init 0070              ??_I2C_Start 0070              ??_I2C_Write 0070  
              ___latbits 0002                 _I2C_NACK 077D                 _I2C_Read 07B1  
               _I2C_Wait 0794                 _I2C_Stop 0774            I2C_Write@Data 0070  
        _I2C_Master_Init 0787  __end_of_I2C_Master_Init 0794  
