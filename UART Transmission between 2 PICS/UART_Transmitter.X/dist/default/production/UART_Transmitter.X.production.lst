

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 27 02:15:20 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0019                     _TXREG	set	25
   167     0008                     _PORTD	set	8
   168     00C7                     _SPEN	set	199
   169     0032                     _RB2	set	50
   170     0031                     _RB1	set	49
   171     0030                     _RB0	set	48
   172     0099                     _SPBRG	set	153
   173     0088                     _TRISD	set	136
   174     0086                     _TRISB	set	134
   175     04C1                     _TRMT	set	1217
   176     04C5                     _TXEN	set	1221
   177     043F                     _TRISC7	set	1087
   178     043E                     _TRISC6	set	1086
   179     04C4                     _SYNC	set	1220
   180     04C2                     _BRGH	set	1218
   181                           
   182                           	psect	cinit
   183     07FC                     start_initialization:	
   184                           ; #config settings
   185                           
   186     07FC                     __initialization:
   187     07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     07FC                     __end_of__initialization:
   191     07FC  0183               	clrf	3
   192     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMMON
   195     0070                     __pcstackCOMMON:
   196     0070                     ?_UART_TX_Init:
   197     0070                     ??_UART_TX_Init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_UART_Write:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ??_UART_Write:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     UART_Write@data:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	1
   215     0071                     ??_main:
   216                           
   217                           ; 1 bytes @ 0x1
   218     0071                     	ds	3
   219     0074                     main@Data:
   220                           
   221                           ; 1 bytes @ 0x4
   222     0074                     	ds	1
   223                           
   224                           	psect	maintext
   225     07A3                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 24 in file "UART_Transmitter.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  Data            1    4[COMMON] unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         1       0       0       0       0
   247 ;;      Temps:          3       0       0       0       0
   248 ;;      Totals:         4       0       0       0       0
   249 ;;Total ram usage:        4 bytes
   250 ;; Hardware stack levels required when called: 1
   251 ;; This function calls:
   252 ;;		_UART_TX_Init
   253 ;;		_UART_Write
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259     07A3                     _main:	
   260                           ;psect for function _main
   261                           
   262     07A3                     l666:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   265                           
   266                           
   267                           ;UART_Transmitter.c: 27:   UART_TX_Init();
   268     07A3  120A  118A  2794  120A  118A  	fcall	_UART_TX_Init
   269     07A8                     l668:
   270                           
   271                           ;UART_Transmitter.c: 28:   uint8_t Data = 0;
   272     07A8  01F4               	clrf	main@Data
   273     07A9                     l670:
   274                           
   275                           ;UART_Transmitter.c: 29:   TRISB = 0x07;
   276     07A9  3007               	movlw	7
   277     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   278     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   279     07AC  0086               	movwf	6	;volatile
   280     07AD                     l672:
   281                           
   282                           ;UART_Transmitter.c: 30:   TRISD = 0x00;
   283     07AD  0188               	clrf	8	;volatile
   284     07AE                     l674:
   285                           
   286                           ;UART_Transmitter.c: 31:   PORTD = 0x00;
   287     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   288     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   289     07B0  0188               	clrf	8	;volatile
   290     07B1                     l676:
   291                           
   292                           ;UART_Transmitter.c: 34:   {;UART_Transmitter.c: 35:     if (RB0)
   293     07B1  1C06               	btfss	6,0	;volatile
   294     07B2  2FB4               	goto	u21
   295     07B3  2FB5               	goto	u20
   296     07B4                     u21:
   297     07B4  2FC6               	goto	l682
   298     07B5                     u20:
   299     07B5                     l678:
   300                           
   301                           ;UART_Transmitter.c: 36:     {;UART_Transmitter.c: 37:       Data++;
   302     07B5  3001               	movlw	1
   303     07B6  00FF               	movwf	btemp+1
   304     07B7  087F               	movf	btemp+1,w
   305     07B8  07F4               	addwf	main@Data,f
   306     07B9                     l680:
   307                           
   308                           ;UART_Transmitter.c: 38:       _delay((unsigned long)((250)*(4000000/4000.0)));
   309     07B9  3002               	movlw	2
   310     07BA  00F3               	movwf	??_main+2
   311     07BB  3045               	movlw	69
   312     07BC  00F2               	movwf	??_main+1
   313     07BD  30A9               	movlw	169
   314     07BE  00F1               	movwf	??_main
   315     07BF                     u57:
   316     07BF  0BF1               	decfsz	??_main,f
   317     07C0  2FBF               	goto	u57
   318     07C1  0BF2               	decfsz	??_main+1,f
   319     07C2  2FBF               	goto	u57
   320     07C3  0BF3               	decfsz	??_main+2,f
   321     07C4  2FBF               	goto	u57
   322     07C5  2FC6               	nop2
   323     07C6                     l682:
   324                           
   325                           ;UART_Transmitter.c: 40:     if (RB1)
   326     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   327     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   328     07C8  1C86               	btfss	6,1	;volatile
   329     07C9  2FCB               	goto	u31
   330     07CA  2FCC               	goto	u30
   331     07CB                     u31:
   332     07CB  2FDB               	goto	l688
   333     07CC                     u30:
   334     07CC                     l684:
   335                           
   336                           ;UART_Transmitter.c: 41:     {;UART_Transmitter.c: 42:       Data--;
   337     07CC  3001               	movlw	1
   338     07CD  02F4               	subwf	main@Data,f
   339     07CE                     l686:
   340                           
   341                           ;UART_Transmitter.c: 43:       _delay((unsigned long)((250)*(4000000/4000.0)));
   342     07CE  3002               	movlw	2
   343     07CF  00F3               	movwf	??_main+2
   344     07D0  3045               	movlw	69
   345     07D1  00F2               	movwf	??_main+1
   346     07D2  30A9               	movlw	169
   347     07D3  00F1               	movwf	??_main
   348     07D4                     u67:
   349     07D4  0BF1               	decfsz	??_main,f
   350     07D5  2FD4               	goto	u67
   351     07D6  0BF2               	decfsz	??_main+1,f
   352     07D7  2FD4               	goto	u67
   353     07D8  0BF3               	decfsz	??_main+2,f
   354     07D9  2FD4               	goto	u67
   355     07DA  2FDB               	nop2
   356     07DB                     l688:
   357                           
   358                           ;UART_Transmitter.c: 45:     if (RB2)
   359     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   360     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   361     07DD  1D06               	btfss	6,2	;volatile
   362     07DE  2FE0               	goto	u41
   363     07DF  2FE1               	goto	u40
   364     07E0                     u41:
   365     07E0  2FF4               	goto	l694
   366     07E1                     u40:
   367     07E1                     l690:
   368                           
   369                           ;UART_Transmitter.c: 46:     {;UART_Transmitter.c: 47:       UART_Write(Data);
   370     07E1  0874               	movf	main@Data,w
   371     07E2  120A  118A  2788  120A  118A  	fcall	_UART_Write
   372     07E7                     l692:
   373                           
   374                           ;UART_Transmitter.c: 48:       _delay((unsigned long)((250)*(4000000/4000.0)));
   375     07E7  3002               	movlw	2
   376     07E8  00F3               	movwf	??_main+2
   377     07E9  3045               	movlw	69
   378     07EA  00F2               	movwf	??_main+1
   379     07EB  30A9               	movlw	169
   380     07EC  00F1               	movwf	??_main
   381     07ED                     u77:
   382     07ED  0BF1               	decfsz	??_main,f
   383     07EE  2FED               	goto	u77
   384     07EF  0BF2               	decfsz	??_main+1,f
   385     07F0  2FED               	goto	u77
   386     07F1  0BF3               	decfsz	??_main+2,f
   387     07F2  2FED               	goto	u77
   388     07F3  2FF4               	nop2
   389     07F4                     l694:
   390                           
   391                           ;UART_Transmitter.c: 50:     PORTD = Data;
   392     07F4  0874               	movf	main@Data,w
   393     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   394     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   395     07F7  0088               	movwf	8	;volatile
   396     07F8  2FB1               	goto	l676
   397     07F9  120A  118A  2800   	ljmp	start
   398     07FC                     __end_of_main:
   399                           
   400                           	psect	text1
   401     0788                     __ptext1:	
   402 ;; *************** function _UART_Write *****************
   403 ;; Defined at:
   404 ;;		line 70 in file "UART_Transmitter.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;  data            1    wreg     unsigned char 
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  data            1    0[COMMON] unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         1       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         1       0       0       0       0
   422 ;;Total ram usage:        1 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     0788                     _UART_Write:	
   432                           ;psect for function _UART_Write
   433                           
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _UART_Write: [wreg]
   437                           ;UART_Write@data stored from wreg
   438     0788  00F0               	movwf	UART_Write@data
   439     0789                     l662:
   440     0789                     l53:	
   441                           ;UART_Transmitter.c: 70: void UART_Write(uint8_t data);UART_Transmitter.c: 71: {;UART_Tr
      +                          ansmitter.c: 72:   while(!TRMT);
   442                           
   443     0789  1683               	bsf	3,5	;RP0=1, select bank1
   444     078A  1303               	bcf	3,6	;RP1=0, select bank1
   445     078B  1C98               	btfss	24,1	;volatile
   446     078C  2F8E               	goto	u11
   447     078D  2F8F               	goto	u10
   448     078E                     u11:
   449     078E  2F89               	goto	l53
   450     078F                     u10:
   451     078F                     l664:
   452                           
   453                           ;UART_Transmitter.c: 73:   TXREG = data;
   454     078F  0870               	movf	UART_Write@data,w
   455     0790  1283               	bcf	3,5	;RP0=0, select bank0
   456     0791  1303               	bcf	3,6	;RP1=0, select bank0
   457     0792  0099               	movwf	25	;volatile
   458     0793                     l56:
   459     0793  0008               	return
   460     0794                     __end_of_UART_Write:
   461                           
   462                           	psect	text2
   463     0794                     __ptext2:	
   464 ;; *************** function _UART_TX_Init *****************
   465 ;; Defined at:
   466 ;;		line 57 in file "UART_Transmitter.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493     0794                     _UART_TX_Init:	
   494                           ;psect for function _UART_TX_Init
   495                           
   496     0794                     l648:	
   497                           ;incstack = 0
   498                           ; Regs used in _UART_TX_Init: [wreg]
   499                           
   500                           
   501                           ;UART_Transmitter.c: 59:   BRGH = 1;
   502     0794  1683               	bsf	3,5	;RP0=1, select bank1
   503     0795  1303               	bcf	3,6	;RP1=0, select bank1
   504     0796  1518               	bsf	24,2	;volatile
   505     0797                     l650:
   506                           
   507                           ;UART_Transmitter.c: 60:   SPBRG = 25;
   508     0797  3019               	movlw	25
   509     0798  0099               	movwf	25	;volatile
   510     0799                     l652:
   511                           
   512                           ;UART_Transmitter.c: 62:   SYNC = 0;
   513     0799  1218               	bcf	24,4	;volatile
   514     079A                     l654:
   515                           
   516                           ;UART_Transmitter.c: 63:   SPEN = 1;
   517     079A  1283               	bcf	3,5	;RP0=0, select bank0
   518     079B  1303               	bcf	3,6	;RP1=0, select bank0
   519     079C  1798               	bsf	24,7	;volatile
   520     079D                     l656:
   521                           
   522                           ;UART_Transmitter.c: 65:   TRISC6 = 1;
   523     079D  1683               	bsf	3,5	;RP0=1, select bank1
   524     079E  1303               	bcf	3,6	;RP1=0, select bank1
   525     079F  1707               	bsf	7,6	;volatile
   526     07A0                     l658:
   527                           
   528                           ;UART_Transmitter.c: 66:   TRISC7 = 1;
   529     07A0  1787               	bsf	7,7	;volatile
   530     07A1                     l660:
   531                           
   532                           ;UART_Transmitter.c: 67:   TXEN = 1;
   533     07A1  1698               	bsf	24,5	;volatile
   534     07A2                     l50:
   535     07A2  0008               	return
   536     07A3                     __end_of_UART_TX_Init:
   537     007E                     btemp	set	126	;btemp
   538     007E                     wtemp0	set	126
   539                           
   540                           	psect	config
   541                           
   542                           ;Config register CONFIG @ 0x2007
   543                           ;	Oscillator Selection bits
   544                           ;	FOSC = XT, XT oscillator
   545                           ;	Watchdog Timer Enable bit
   546                           ;	WDTE = OFF, WDT disabled
   547                           ;	Power-up Timer Enable bit
   548                           ;	PWRTE = ON, PWRT enabled
   549                           ;	Brown-out Reset Enable bit
   550                           ;	BOREN = ON, BOR enabled
   551                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   552                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   553                           ;	Data EEPROM Memory Code Protection bit
   554                           ;	CPD = OFF, Data EEPROM code protection off
   555                           ;	Flash Program Memory Write Enable bits
   556                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   557                           ;	In-Circuit Debugger Mode bit
   558                           ;	DEBUG = 0x1, unprogrammed default
   559                           ;	Flash Program Memory Code Protection bit
   560                           ;	CP = OFF, Code protection off
   561     2007                     	org	8199
   562     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                       _UART_TX_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 27 02:15:20 2023

                     l50 07A2                       l53 0789                       l56 0793  
                     u10 078F                       u11 078E                       u20 07B5  
                     u21 07B4                       u30 07CC                       u31 07CB  
                     u40 07E1                       u41 07E0                       u57 07BF  
                     u67 07D4                       u77 07ED                      l650 0797  
                    l660 07A1                      l652 0799                      l654 079A  
                    l662 0789                      l670 07A9                      l656 079D  
                    l648 0794                      l664 078F                      l680 07B9  
                    l672 07AD                      l658 07A0                      l690 07E1  
                    l682 07C6                      l674 07AE                      l666 07A3  
                    l692 07E7                      l684 07CC                      l676 07B1  
                    l668 07A8                      l694 07F4                      l686 07CE  
                    l678 07B5                      l688 07DB                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 07A3                     btemp 007E  
                   start 0000                    ?_main 0070                    _SPBRG 0099  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019              ?_UART_Write 0070                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _TRISC6 043E                   _TRISC7 043F  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07A3  
           ??_UART_Write 0070            ?_UART_TX_Init 0070       __end_of_UART_Write 0794  
                __ptext1 0788                  __ptext2 0794           ??_UART_TX_Init 0070  
   end_of_initialization 07FC           UART_Write@data 0070      start_initialization 07FC  
   __end_of_UART_TX_Init 07A3                ___latbits 0002             _UART_TX_Init 0794  
               main@Data 0074               _UART_Write 0788  
