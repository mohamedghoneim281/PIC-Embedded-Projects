

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 02 18:40:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0013                     _SSPBUF	set	19
   170     0014                     _SSPCON	set	20
   171     0008                     _PORTD	set	8
   172     0043                     _RD3	set	67
   173     0094                     _SSPSTAT	set	148
   174     0093                     _SSPADD	set	147
   175     0091                     _SSPCON2	set	145
   176     0088                     _TRISD	set	136
   177     0086                     _TRISB	set	134
   178     048E                     _ACKSTAT	set	1166
   179     048C                     _ACKEN	set	1164
   180     048D                     _ACKDT	set	1165
   181     0489                     _RSEN	set	1161
   182     048A                     _PEN	set	1162
   183     0488                     _SEN	set	1160
   184     043C                     _TRISC4	set	1084
   185     043B                     _TRISC3	set	1083
   186                           
   187                           	psect	cinit
   188     07FC                     start_initialization:	
   189                           ; #config settings
   190                           
   191     07FC                     __initialization:
   192     07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     07FC                     __end_of__initialization:
   196     07FC  0183               	clrf	3
   197     07FD  120A  118A  2FBE   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200     0070                     __pcstackCOMMON:
   201     0070                     ?_I2C_Master_Init:
   202     0070                     ??_I2C_Master_Init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_I2C_Start:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_I2C_Start:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_I2C_Write:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_I2C_Write:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ?_I2C_Stop:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ??_I2C_Stop:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_I2C_Wait:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ??_I2C_Wait:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     I2C_Write@Data:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237     0070                     	ds	1
   238     0071                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x1
   241     0071                     	ds	3
   242     0074                     main@i:
   243                           
   244                           ; 1 bytes @ 0x4
   245     0074                     	ds	1
   246                           
   247                           	psect	maintext
   248     07BE                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 21 in file "I2C_Master_Transmitter.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  i               1    4[COMMON] unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   268 ;;      Params:         0       0       0       0       0
   269 ;;      Locals:         1       0       0       0       0
   270 ;;      Temps:          3       0       0       0       0
   271 ;;      Totals:         4       0       0       0       0
   272 ;;Total ram usage:        4 bytes
   273 ;; Hardware stack levels required when called: 2
   274 ;; This function calls:
   275 ;;		_I2C_Master_Init
   276 ;;		_I2C_Start
   277 ;;		_I2C_Stop
   278 ;;		_I2C_Write
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284     07BE                     _main:	
   285                           ;psect for function _main
   286                           
   287     07BE                     l701:	
   288                           ;incstack = 0
   289                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   290                           
   291                           
   292                           ;I2C_Master_Transmitter.c: 22:     TRISB=0xFF;
   293     07BE  30FF               	movlw	255
   294     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   295     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   296     07C1  0086               	movwf	6	;volatile
   297     07C2                     l703:
   298                           
   299                           ;I2C_Master_Transmitter.c: 23:     TRISD=0x00;
   300     07C2  0188               	clrf	8	;volatile
   301     07C3                     l705:
   302                           
   303                           ;I2C_Master_Transmitter.c: 24:     PORTD=0x00;
   304     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   305     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   306     07C5  0188               	clrf	8	;volatile
   307     07C6                     l707:
   308                           
   309                           ;I2C_Master_Transmitter.c: 25:     unsigned char i=1;
   310     07C6  01F4               	clrf	main@i
   311     07C7  0AF4               	incf	main@i,f
   312     07C8                     l709:
   313                           
   314                           ;I2C_Master_Transmitter.c: 26:     I2C_Master_Init();
   315     07C8  120A  118A  27A0  120A  118A  	fcall	_I2C_Master_Init
   316     07CD                     l711:
   317                           
   318                           ;I2C_Master_Transmitter.c: 28:         I2C_Start();
   319     07CD  120A  118A  2781  120A  118A  	fcall	_I2C_Start
   320     07D2                     l713:
   321                           
   322                           ;I2C_Master_Transmitter.c: 29:         I2C_Write(0x40);
   323     07D2  3040               	movlw	64
   324     07D3  120A  118A  27AE  120A  118A  	fcall	_I2C_Write
   325     07D8                     l715:
   326                           
   327                           ;I2C_Master_Transmitter.c: 30:         I2C_Write(i++);
   328     07D8  0874               	movf	main@i,w
   329     07D9  120A  118A  27AE  120A  118A  	fcall	_I2C_Write
   330     07DE                     l717:
   331     07DE  3001               	movlw	1
   332     07DF  00FF               	movwf	btemp+1
   333     07E0  087F               	movf	btemp+1,w
   334     07E1  07F4               	addwf	main@i,f
   335     07E2                     l719:
   336                           
   337                           ;I2C_Master_Transmitter.c: 31:         I2C_Stop();
   338     07E2  120A  118A  278A  120A  118A  	fcall	_I2C_Stop
   339     07E7                     l721:
   340                           
   341                           ;I2C_Master_Transmitter.c: 32:         _delay((unsigned long)((500)*(4000000/4000.0)));
   342     07E7  3003               	movlw	3
   343     07E8  00F3               	movwf	??_main+2
   344     07E9  308A               	movlw	138
   345     07EA  00F2               	movwf	??_main+1
   346     07EB  3055               	movlw	85
   347     07EC  00F1               	movwf	??_main
   348     07ED                     u37:
   349     07ED  0BF1               	decfsz	??_main,f
   350     07EE  2FED               	goto	u37
   351     07EF  0BF2               	decfsz	??_main+1,f
   352     07F0  2FED               	goto	u37
   353     07F1  0BF3               	decfsz	??_main+2,f
   354     07F2  2FED               	goto	u37
   355     07F3  2FF4               	nop2
   356     07F4                     l723:
   357                           
   358                           ;I2C_Master_Transmitter.c: 33:         RD3=~RD3;
   359     07F4  3008               	movlw	8
   360     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   361     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   362     07F7  0688               	xorwf	8,f
   363     07F8  2FCD               	goto	l711
   364     07F9  120A  118A  2800   	ljmp	start
   365     07FC                     __end_of_main:
   366                           
   367                           	psect	text1
   368     07AE                     __ptext1:	
   369 ;; *************** function _I2C_Write *****************
   370 ;; Defined at:
   371 ;;		line 70 in file "I2C_Master_Transmitter.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  Data            1    wreg     unsigned char 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  Data            1    0[COMMON] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      unsigned char 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, pclath, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         1       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0
   388 ;;      Totals:         1       0       0       0       0
   389 ;;Total ram usage:        1 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 1
   392 ;; This function calls:
   393 ;;		_I2C_Wait
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399     07AE                     _I2C_Write:	
   400                           ;psect for function _I2C_Write
   401                           
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   405                           ;I2C_Write@Data stored from wreg
   406     07AE  00F0               	movwf	I2C_Write@Data
   407     07AF                     l687:
   408                           
   409                           ;I2C_Master_Transmitter.c: 71:     I2C_Wait();
   410     07AF  120A  118A  2793  120A  118A  	fcall	_I2C_Wait
   411     07B4                     l689:
   412                           
   413                           ;I2C_Master_Transmitter.c: 72:     SSPBUF=Data;
   414     07B4  0870               	movf	I2C_Write@Data,w
   415     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   416     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   417     07B7  0093               	movwf	19	;volatile
   418     07B8                     l691:
   419                           
   420                           ;I2C_Master_Transmitter.c: 73:     I2C_Wait();
   421     07B8  120A  118A  2793  120A  118A  	fcall	_I2C_Wait
   422     07BD                     l693:
   423     07BD                     l79:	
   424                           ;I2C_Master_Transmitter.c: 74:     return ACKSTAT;;	Return value of _I2C_Write is never 
      +                          used
   425                           
   426     07BD  0008               	return
   427     07BE                     __end_of_I2C_Write:
   428                           
   429                           	psect	text2
   430     078A                     __ptext2:	
   431 ;; *************** function _I2C_Stop *****************
   432 ;; Defined at:
   433 ;;		line 52 in file "I2C_Master_Transmitter.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 1
   454 ;; This function calls:
   455 ;;		_I2C_Wait
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     078A                     _I2C_Stop:	
   462                           ;psect for function _I2C_Stop
   463                           
   464     078A                     l697:	
   465                           ;incstack = 0
   466                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;I2C_Master_Transmitter.c: 53:     I2C_Wait();
   470     078A  120A  118A  2793  120A  118A  	fcall	_I2C_Wait
   471     078F                     l699:
   472                           
   473                           ;I2C_Master_Transmitter.c: 54:     PEN=1;
   474     078F  1683               	bsf	3,5	;RP0=1, select bank1
   475     0790  1303               	bcf	3,6	;RP1=0, select bank1
   476     0791  1511               	bsf	17,2	;volatile
   477     0792                     l67:
   478     0792  0008               	return
   479     0793                     __end_of_I2C_Stop:
   480                           
   481                           	psect	text3
   482     0781                     __ptext3:	
   483 ;; *************** function _I2C_Start *****************
   484 ;; Defined at:
   485 ;;		line 48 in file "I2C_Master_Transmitter.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		_I2C_Wait
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513     0781                     _I2C_Start:	
   514                           ;psect for function _I2C_Start
   515                           
   516     0781                     l683:	
   517                           ;incstack = 0
   518                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;I2C_Master_Transmitter.c: 49:     I2C_Wait();
   522     0781  120A  118A  2793  120A  118A  	fcall	_I2C_Wait
   523     0786                     l685:
   524                           
   525                           ;I2C_Master_Transmitter.c: 50:     SEN=1;
   526     0786  1683               	bsf	3,5	;RP0=1, select bank1
   527     0787  1303               	bcf	3,6	;RP1=0, select bank1
   528     0788  1411               	bsf	17,0	;volatile
   529     0789                     l64:
   530     0789  0008               	return
   531     078A                     __end_of_I2C_Start:
   532                           
   533                           	psect	text4
   534     0793                     __ptext4:	
   535 ;; *************** function _I2C_Wait *****************
   536 ;; Defined at:
   537 ;;		line 45 in file "I2C_Master_Transmitter.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_I2C_Start
   561 ;;		_I2C_Stop
   562 ;;		_I2C_Write
   563 ;;		_I2C_Restart
   564 ;;		_I2C_ACK
   565 ;;		_I2C_NACK
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     0793                     _I2C_Wait:	
   570                           ;psect for function _I2C_Wait
   571                           
   572     0793                     l671:	
   573                           ;incstack = 0
   574                           ; Regs used in _I2C_Wait: [wreg+status,2]
   575                           
   576     0793                     l58:	
   577                           ;I2C_Master_Transmitter.c: 46:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   578                           
   579     0793  1683               	bsf	3,5	;RP0=1, select bank1
   580     0794  1303               	bcf	3,6	;RP1=0, select bank1
   581     0795  1914               	btfsc	20,2	;volatile
   582     0796  2F98               	goto	u11
   583     0797  2F99               	goto	u10
   584     0798                     u11:
   585     0798  2F93               	goto	l58
   586     0799                     u10:
   587     0799                     l673:
   588     0799  0811               	movf	17,w	;volatile
   589     079A  391F               	andlw	31
   590     079B  1D03               	btfss	3,2
   591     079C  2F9E               	goto	u21
   592     079D  2F9F               	goto	u20
   593     079E                     u21:
   594     079E  2F93               	goto	l58
   595     079F                     u20:
   596     079F                     l61:
   597     079F  0008               	return
   598     07A0                     __end_of_I2C_Wait:
   599                           
   600                           	psect	text5
   601     07A0                     __ptext5:	
   602 ;; *************** function _I2C_Master_Init *****************
   603 ;; Defined at:
   604 ;;		line 38 in file "I2C_Master_Transmitter.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631     07A0                     _I2C_Master_Init:	
   632                           ;psect for function _I2C_Master_Init
   633                           
   634     07A0                     l675:	
   635                           ;incstack = 0
   636                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
   637                           
   638                           
   639                           ;I2C_Master_Transmitter.c: 39:     TRISC3=1;
   640     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   641     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   642     07A2  1587               	bsf	7,3	;volatile
   643                           
   644                           ;I2C_Master_Transmitter.c: 40:     TRISC4=1;
   645     07A3  1607               	bsf	7,4	;volatile
   646     07A4                     l677:
   647                           
   648                           ;I2C_Master_Transmitter.c: 41:     SSPCON=0x28;
   649     07A4  3028               	movlw	40
   650     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   651     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   652     07A7  0094               	movwf	20	;volatile
   653     07A8                     l679:
   654                           
   655                           ;I2C_Master_Transmitter.c: 42:     SSPCON2=0x00;
   656     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   657     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   658     07AA  0191               	clrf	17	;volatile
   659     07AB                     l681:
   660                           
   661                           ;I2C_Master_Transmitter.c: 43:     SSPADD=((4000000/4)/100000)-1;
   662     07AB  3009               	movlw	9
   663     07AC  0093               	movwf	19	;volatile
   664     07AD                     l55:
   665     07AD  0008               	return
   666     07AE                     __end_of_I2C_Master_Init:
   667     007E                     btemp	set	126	;btemp
   668     007E                     wtemp0	set	126
   669                           
   670                           	psect	config
   671                           
   672                           ;Config register CONFIG @ 0x2007
   673                           ;	Oscillator Selection bits
   674                           ;	FOSC = XT, XT oscillator
   675                           ;	Watchdog Timer Enable bit
   676                           ;	WDTE = OFF, WDT disabled
   677                           ;	Power-up Timer Enable bit
   678                           ;	PWRTE = ON, PWRT enabled
   679                           ;	Brown-out Reset Enable bit
   680                           ;	BOREN = ON, BOR enabled
   681                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   682                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   683                           ;	Data EEPROM Memory Code Protection bit
   684                           ;	CPD = OFF, Data EEPROM code protection off
   685                           ;	Flash Program Memory Write Enable bits
   686                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   687                           ;	In-Circuit Debugger Mode bit
   688                           ;	DEBUG = 0x1, unprogrammed default
   689                           ;	Flash Program Memory Code Protection bit
   690                           ;	CP = OFF, Code protection off
   691     2007                     	org	8199
   692     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              1 COMMON     4     4      0
                    _I2C_Master_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write
     _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 02 18:40:34 2023

                     l61 079F                       l55 07AD                       l64 0789  
                     l58 0793                       l67 0792                       l79 07BD  
                     u10 0799                       u11 0798                       u20 079F  
                     u21 079E                       u37 07ED                      l701 07BE  
                    l711 07CD                      l703 07C2                      l721 07E7  
                    l713 07D2                      l705 07C3                      l723 07F4  
                    l715 07D8                      l707 07C6                      l717 07DE  
                    l709 07C8                      l671 0793                      l719 07E2  
                    l681 07AB                      l673 0799                      l675 07A0  
                    l683 0781                      l691 07B8                      l677 07A4  
                    l685 0786                      l693 07BD                      l679 07A8  
                    l687 07AF                      l697 078A                      l689 07B4  
                    l699 078F                      _RD3 0043                      _PEN 048A  
                    _SEN 0488                     _RSEN 0489                     _main 07BE  
                   btemp 007E         __end_of_I2C_Wait 07A0         __end_of_I2C_Stop 0793  
                   start 0000         ?_I2C_Master_Init 0070                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    main@i 0074  
      __end_of_I2C_Start 078A        __end_of_I2C_Write 07BE                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
              ?_I2C_Wait 0070                ?_I2C_Stop 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_I2C_Wait 0070               ??_I2C_Stop 0070  
             __pmaintext 07BE                  _ACKSTAT 048E                  _SSPCON2 0091  
                _SSPSTAT 0094                _I2C_Start 0781                _I2C_Write 07AE  
                __ptext1 07AE                  __ptext2 078A                  __ptext3 0781  
                __ptext4 0793                  __ptext5 07A0     end_of_initialization 07FC  
             ?_I2C_Start 0070               ?_I2C_Write 0070      start_initialization 07FC  
      ??_I2C_Master_Init 0070              ??_I2C_Start 0070              ??_I2C_Write 0070  
              ___latbits 0002                 _I2C_Wait 0793                 _I2C_Stop 078A  
          I2C_Write@Data 0070          _I2C_Master_Init 07A0  __end_of_I2C_Master_Init 07AE  
