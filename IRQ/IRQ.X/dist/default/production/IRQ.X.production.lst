

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun 24 15:47:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0059                     _INTF	set	89
   167     005F                     _GIE	set	95
   168     005C                     _INTE	set	92
   169     003A                     _RC2	set	58
   170     0039                     _RC1	set	57
   171     040E                     _INTEDG	set	1038
   172     0430                     _TRISB0	set	1072
   173     043A                     _TRISC2	set	1082
   174     0439                     _TRISC1	set	1081
   175                           
   176                           	psect	cinit
   177     000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180     000F                     __initialization:
   181     000F                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     000F                     __end_of__initialization:
   185     000F  0183               	clrf	3
   186     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_main:
   191     0070                     ?_ISR:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     ??_ISR:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 1 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     ??_main:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	3
   204                           
   205                           	psect	maintext
   206     0013                     __pmaintext:	
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 12 in file "IRQ.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg
   221 ;; Tracked objects:
   222 ;;		On entry : B00/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   226 ;;      Params:         0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0
   228 ;;      Temps:          3       0       0       0       0
   229 ;;      Totals:         3       0       0       0       0
   230 ;;Total ram usage:        3 bytes
   231 ;; Hardware stack levels required when called: 1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239     0013                     _main:	
   240                           ;psect for function _main
   241                           
   242     0013                     l626:	
   243                           ;incstack = 0
   244                           ; Regs used in _main: [wreg]
   245                           
   246                           
   247                           ;IRQ.c: 13:     TRISC1=0;
   248     0013  1683               	bsf	3,5	;RP0=1, select bank1
   249     0014  1303               	bcf	3,6	;RP1=0, select bank1
   250     0015  1087               	bcf	7,1	;volatile
   251                           
   252                           ;IRQ.c: 14:     TRISC2=0;
   253     0016  1107               	bcf	7,2	;volatile
   254                           
   255                           ;IRQ.c: 15:     RC1=0;
   256     0017  1283               	bcf	3,5	;RP0=0, select bank0
   257     0018  1303               	bcf	3,6	;RP1=0, select bank0
   258     0019  1087               	bcf	7,1	;volatile
   259                           
   260                           ;IRQ.c: 16:     RC2=0;
   261     001A  1107               	bcf	7,2	;volatile
   262                           
   263                           ;IRQ.c: 17:     TRISB0=1;
   264     001B  1683               	bsf	3,5	;RP0=1, select bank1
   265     001C  1303               	bcf	3,6	;RP1=0, select bank1
   266     001D  1406               	bsf	6,0	;volatile
   267                           
   268                           ;IRQ.c: 18:     INTEDG=1;
   269     001E  1701               	bsf	1,6	;volatile
   270                           
   271                           ;IRQ.c: 19:     INTE=1;
   272     001F  160B               	bsf	11,4	;volatile
   273                           
   274                           ;IRQ.c: 20:     GIE=1;
   275     0020  178B               	bsf	11,7	;volatile
   276     0021                     l25:	
   277                           ;IRQ.c: 21:     while(1){
   278                           
   279                           
   280                           ;IRQ.c: 22:         RC2=1;
   281     0021  1283               	bcf	3,5	;RP0=0, select bank0
   282     0022  1303               	bcf	3,6	;RP1=0, select bank0
   283     0023  1507               	bsf	7,2	;volatile
   284     0024                     l628:
   285                           
   286                           ;IRQ.c: 23:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   287     0024  3006               	movlw	6
   288     0025  00F4               	movwf	??_main+2
   289     0026  3013               	movlw	19
   290     0027  00F3               	movwf	??_main+1
   291     0028  30AD               	movlw	173
   292     0029  00F2               	movwf	??_main
   293     002A                     u27:
   294     002A  0BF2               	decfsz	??_main,f
   295     002B  282A               	goto	u27
   296     002C  0BF3               	decfsz	??_main+1,f
   297     002D  282A               	goto	u27
   298     002E  0BF4               	decfsz	??_main+2,f
   299     002F  282A               	goto	u27
   300     0030  2831               	nop2
   301     0031                     l630:
   302                           
   303                           ;IRQ.c: 24:         RC2=0;
   304     0031  1283               	bcf	3,5	;RP0=0, select bank0
   305     0032  1303               	bcf	3,6	;RP1=0, select bank0
   306     0033  1107               	bcf	7,2	;volatile
   307                           
   308                           ;IRQ.c: 25:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   309     0034  3006               	movlw	6
   310     0035  00F4               	movwf	??_main+2
   311     0036  3013               	movlw	19
   312     0037  00F3               	movwf	??_main+1
   313     0038  30AD               	movlw	173
   314     0039  00F2               	movwf	??_main
   315     003A                     u37:
   316     003A  0BF2               	decfsz	??_main,f
   317     003B  283A               	goto	u37
   318     003C  0BF3               	decfsz	??_main+1,f
   319     003D  283A               	goto	u37
   320     003E  0BF4               	decfsz	??_main+2,f
   321     003F  283A               	goto	u37
   322     0040  2841               	nop2
   323     0041  2821               	goto	l25
   324     0042  120A  118A  280C   	ljmp	start
   325     0045                     __end_of_main:
   326                           
   327                           	psect	text1
   328     0045                     __ptext1:	
   329 ;; *************** function _ISR *****************
   330 ;; Defined at:
   331 ;;		line 29 in file "IRQ.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          2       0       0       0       0
   348 ;;      Totals:         2       0       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		Interrupt level 1
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358     0045                     _ISR:	
   359                           ;psect for function _ISR
   360                           
   361     0045                     i1l632:
   362                           
   363                           ;IRQ.c: 30:     if(INTF){
   364     0045  1C8B               	btfss	11,1	;volatile
   365     0046  2848               	goto	u1_21
   366     0047  2849               	goto	u1_20
   367     0048                     u1_21:
   368     0048  284E               	goto	i1l34
   369     0049                     u1_20:
   370     0049                     i1l634:
   371                           
   372                           ;IRQ.c: 31:         RC1=~RC1;
   373     0049  3002               	movlw	2
   374     004A  1283               	bcf	3,5	;RP0=0, select bank0
   375     004B  1303               	bcf	3,6	;RP1=0, select bank0
   376     004C  0687               	xorwf	7,f
   377     004D                     i1l636:
   378                           
   379                           ;IRQ.c: 32:         INTF=0;
   380     004D  108B               	bcf	11,1	;volatile
   381     004E                     i1l34:
   382     004E  0871               	movf	??_ISR+1,w
   383     004F  008A               	movwf	10
   384     0050  0E70               	swapf	??_ISR,w
   385     0051  0083               	movwf	3
   386     0052  0EFE               	swapf	btemp,f
   387     0053  0E7E               	swapf	btemp,w
   388     0054  0009               	retfie
   389     0055                     __end_of_ISR:
   390     007E                     btemp	set	126	;btemp
   391     007E                     wtemp0	set	126
   392                           
   393                           	psect	intentry
   394     0004                     __pintentry:	
   395                           ;incstack = 0
   396                           ; Regs used in _ISR: [wreg]
   397                           
   398     0004                     interrupt_function:
   399     007E                     saved_w	set	btemp
   400     0004  00FE               	movwf	btemp
   401     0005  0E03               	swapf	3,w
   402     0006  00F0               	movwf	??_ISR
   403     0007  080A               	movf	10,w
   404     0008  00F1               	movwf	??_ISR+1
   405     0009  120A  118A  2845   	ljmp	_ISR
   406                           
   407                           	psect	config
   408                           
   409                           ;Config register CONFIG @ 0x2007
   410                           ;	Oscillator Selection bits
   411                           ;	FOSC = XT, XT oscillator
   412                           ;	Watchdog Timer Enable bit
   413                           ;	WDTE = OFF, WDT disabled
   414                           ;	Power-up Timer Enable bit
   415                           ;	PWRTE = ON, PWRT enabled
   416                           ;	Brown-out Reset Enable bit
   417                           ;	BOREN = ON, BOR enabled
   418                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   419                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   420                           ;	Data EEPROM Memory Code Protection bit
   421                           ;	CPD = OFF, Data EEPROM code protection off
   422                           ;	Flash Program Memory Write Enable bits
   423                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   424                           ;	In-Circuit Debugger Mode bit
   425                           ;	DEBUG = 0x1, unprogrammed default
   426                           ;	Flash Program Memory Code Protection bit
   427                           ;	CP = OFF, Code protection off
   428     2007                     	org	8199
   429     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun 24 15:47:30 2023

                     l25 0021                       u27 002A                       u37 003A  
                    l630 0031                      l626 0013                      l628 0024  
                    _GIE 005F                      _RC1 0039                      _RC2 003A  
                    _ISR 0045                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l34 004E                     u1_20 0049  
                   u1_21 0048                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l632 0045                    i1l634 0049                    i1l636 004D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0045                   ??_main 0072  
                 _INTEDG 040E                   _TRISB0 0430                   _TRISC1 0439  
                 _TRISC2 043A                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 0013               __pintentry 0004  
                __ptext1 0045     end_of_initialization 000F      start_initialization 000F  
            __end_of_ISR 0055                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
